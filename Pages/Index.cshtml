@page
@model CStat.Pages.Index1Model
@{
    Layout = null;
}

    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>

        <script type="text/javascript">

            window.addEventListener("pageshow", function (event) {
                var historyTraversal = event.persisted ||
                    (typeof window.performance != "undefined" &&
                        window.performance.navigation.type === 2);
                if (historyTraversal) {
                    // Make sure to refresh top status page when returning to this page
                    window.location.reload(true);
                }
            });

            function setCBHeight() {

                const elem = document.documentElement;
                if (elem.requestFullscreen) { elem.requestFullscreen() }

                let hdrDiv = document.querySelector(".header");
                let refBtn = document.querySelector(".refBtn");
                let setBtn = document.querySelector(".setBtn");
                let btnSVG = document.querySelector("#btnSVG");
                hdrDiv.style.fontSize = "4vw";

                let totW = Math.min(document.documentElement.clientWidth, window.innerWidth || 0);
                let totH = Math.min(document.documentElement.clientHeight, window.innerHeight || 0);

                let hdrH = !!hdrDiv ? hdrDiv.clientHeight : Math.round(totH / 10);
                let cellH = Math.round((totH - (1.6 * hdrH)) / 2);
                let lineH = Math.round(cellH - (totW * .12));

                //refBtn.style.width = .8 * hdrH + "px";
                //refBtn.style.height = .8 * hdrH + "px";
                //btnSVG.style.width = .6 * hdrH + "px";
                //btnSVG.style.height = .6 * hdrH + "px";

                if (totW < totH) {
                    setBtn.style.minWidth = "1.3em";
                    setBtn.style.minHeight = "1.3em";
                    setBtn.style.maxWidth = "1.3em";
                    setBtn.style.maxHeight = "1.3em";
                }
                else {
                    setBtn.style.minWidth = "1em";
                    setBtn.style.minHeight = "1em";
                    setBtn.style.maxWidth = "1em";
                    setBtn.style.maxHeight = "1em";
                }

                // let myCells = document.querySelectorAll('[style$="CBtn"]'); // TO DO : Make "Ends With" work for document.querySelectorAll('[style$="CBtn"]')
                let myCells = [];
                myCells.push(document.querySelectorAll(".TasksCBtn")[0]);
                myCells.push(document.querySelectorAll(".EquipCBtn")[0]);
                myCells.push(document.querySelectorAll(".InvCBtn")[0]);
                myCells.push(document.querySelectorAll(".DocsCBtn")[0]);
                for (var i = 0; i < myCells.length; ++i) {
                    myCells[i].style.fontSize = "6vw";
                    myCells[i].style.fontWeight = "600";
                    myCells[i].style.height = cellH + "px";
                    myCells[i].style.lineHeight = lineH + "px";
                }
            }

            screen.orientation.addEventListener("change", function (e) { setCBHeight(); }, false);
            //screen.window.orientation.addEventListener("change", function (e) { setCBHeight(); }, false)
            //$(window).bind("resize", function(){
            //    screenOrientation = ($(window).width() > $(window).height())? 90 : 0;
            //});
            //$(window).bind("resize", setCBHeight());

            function doSettings() {
                location.assign("/Settings");
            }

            $(document).ready(function () {

                const elem = document.documentElement;
                if (elem.requestFullscreen) { elem.requestFullscreen() }

            });

        </script>

        <style>
            * {
                box-sizing: border-box;
            }

            .header {
                background-color: #003000;
                color: yellow;
                width: 100%;
            }

            .TasksCBtn {
                background-color: @Model.GetTasksColor();
                text-align: center;
                float: left;
                border: 3px solid #006600;
                width: 50%;
                line-height: 200px;
            }
            .EquipCBtn {
                background-color: @Model.GetEquipColor();
                text-align: center;
                float: left;
                border: 3px solid #006600;
                width: 50%;
                line-height: 200px;
            }
            .InvCBtn {
                background-color: @Model.GetInvColor();
                text-align: center;
                float: left;
                border: 3px solid #006600;
                width: 50%;
                line-height: 200px;
            }
            .DocsCBtn {
                background-color: @Model.GetDocsColor();
                text-align: center;
                float: left;
                border: 3px solid #006600;
                width: 50%;
                line-height: 200px;
            }

            .refBtn {
                padding: 0px 0px 0px 0px;
                background-color: #FFFFFF;
                border-radius: 5px;
                border: 2px solid #00CCCC;
                min-width: 1.75em;
                min-height: 1.75em;
                max-width: 1.75em;
                max-height: 1.75em;
                margin: 0 0;
            }

            #btnSVG {
                min-width: 1.5em;
                min-height: 1.5em;
                max-width: 1.5em;
                max-height: 1.5em;
            }

            .setBtn {
                min-width: 1em;
                min-height: 1em;
                max-width: 1em;
                max-height: 1em;
            }

            a {
                text-decoration: none !important;
                color: black;
            }

            .container {
                display: flex;
            }

            .container.space-around {
                justify-content: space-around;
            }

            .container.space-between {
                justify-content: space-between;
            }

        </style>
    </head>
<body onload="setCBHeight()" onresize="setCBHeight()" bgcolor="black" margin="0">

    @{
        var dtLoc = DateTime.UtcNow;
        TimeZoneInfo easternZone = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");
        DateTime dt = TimeZoneInfo.ConvertTime(dtLoc, easternZone);
        var curDT = dt.DayOfWeek.ToString().Substring(0, 3) + " " + dt.Day  + " @ " + dt.ToString("h:mm") + " " + ((dt.Hour >= 12) ? "P" : "A") + " ";
        var AtIdx = User.Identity.Name.IndexOf("@");
        if (AtIdx == -1) AtIdx = 6;
        var user = User.Identity.Name.Substring(0, AtIdx);
    }
    <div class="header container space-between">
        <div>
            <b>@curDT<button class="refBtn" type="button" onclick="location.reload(true);">
               <svg id="btnSVG" viewBox="0 0 40 40"><path fill="#8bb7f0" d="M4.207,35.5l2.573-2.574l-0.328-0.353C3.259,29.143,1.5,24.677,1.5,20C1.5,9.799,9.799,1.5,20,1.5 c0.776,0,1.598,0.062,2.5,0.19v4.032C21.661,5.575,20.823,5.5,20,5.5C12.005,5.5,5.5,12.005,5.5,20 c0,3.578,1.337,7.023,3.765,9.701l0.353,0.389l2.883-2.883V35.5H4.207z" /><path fill="#4e7ab5" d="M20,2c0.627,0,1.287,0.042,2,0.129v3.009C21.33,5.046,20.661,5,20,5C11.729,5,5,11.729,5,20 c0,3.702,1.383,7.267,3.894,10.037l0.705,0.778l0.743-0.743L12,28.414V35H5.414l1.379-1.379l0.682-0.682l-0.657-0.706 C3.711,28.895,2,24.551,2,20C2,10.075,10.075,2,20,2 M20,1C9.507,1,1,9.507,1,20c0,4.994,1.934,9.527,5.086,12.914L3,36h10V26 l-3.365,3.365C7.387,26.885,6,23.612,6,20c0-7.732,6.268-14,14-14c1.031,0,2.033,0.119,3,0.33V1.259C22.02,1.104,21.023,1,20,1 L20,1z" /><g><path fill="#8bb7f0" d="M20,38.5c-0.776,0-1.598-0.062-2.5-0.19v-4.032c0.839,0.147,1.677,0.222,2.5,0.222 c7.995,0,14.5-6.505,14.5-14.5c0-3.583-1.336-7.03-3.761-9.706l-0.353-0.389L27.5,12.793V4.5h8.293l-2.581,2.582l0.328,0.354 C36.738,10.872,38.5,15.334,38.5,20C38.5,30.201,30.201,38.5,20,38.5z" /><path fill="#4e7ab5" d="M34.586,5l-1.387,1.387l-0.682,0.682l0.657,0.706C36.286,11.119,38,15.461,38,20 c0,9.925-8.075,18-18,18c-0.627,0-1.287-0.042-2-0.129v-3.009C18.67,34.954,19.339,35,20,35c8.271,0,15-6.729,15-15 c0-3.708-1.381-7.274-3.89-10.041l-0.705-0.778l-0.743,0.743L28,11.586V5H34.586 M37,4H27v10l3.369-3.369 C32.618,13.111,34,16.388,34,20c0,7.732-6.268,14-14,14c-1.031,0-2.033-0.119-3-0.33v5.071C17.98,38.896,18.977,39,20,39 c10.493,0,19-8.507,19-19c0-4.993-1.942-9.519-5.094-12.906L37,4L37,4z" /></g></svg>
               </button>&nbsp;@user</b>
        </div>
        <img class="setBtn" src="~/images/Settings_16x.svg" alt="[=]" onclick="doSettings()">
        <div>
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                <button type="submit" class="nav-link btn btn-link text-dark" style="margin:0px">X</button>
            </form>
        </div>
    </div>

    <div class="TasksCBtn" id="Tasks">
        <p><a href="Tasks/Index">Tasks</a></p>
    </div>

    <div class="EquipCBtn" id="Equip">
        <p><a href="Equip">Equip</a></p>
    </div>

    <div class="InvCBtn" id="Inv">
        <p><a href="Inventory">Stock</a></p>
    </div>

    <div class="DocsCBtn" id="Docs">
        <p><a href= "Info">Info</a></p>
    </div>

 </body>
