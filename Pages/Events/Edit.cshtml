@page
@model CStat.Pages.Events.EditModel
@Html.AntiForgeryToken()
@{
    ViewData["Title"] = "Edit Event";
}

<head>
    @using System;
    @using System.Web;
    @using System.Globalization;
    @using CStat.Models;

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.3/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.3/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/gh/bgaze/bootstrap4-dialogs@1/dist/bootstrap4-dialogs.min.js"></script>

    <style>

        .center {
            text-align: center
        }

        .TRight {
            text-align: right
        }

        .ediv {
            border-width: 1px;
            border-style: solid;
            border-color: #C0FFC0;
            background-color: #F2FFF2;
            padding-bottom: 3px;
        }

        .ILabel {
            padding-right: 2px;
            padding-top: 7px;
            padding-bottom: 2px;
            margin-bottom: 2px;
        }

        .IValue {
            padding-top: 2px;
            padding-left: 4px;
        }

        .lpad {
            margin-left: 4px;
        }

        * {
            box-sizing: border-box;
        }

        .frow {
            display: flex;
        }

        /* Create two equal columns that sits next to each other */
        .fcolumn {
            flex: 50%;
            padding: 2px;
        }

        .lgi {
            max-width: 15.5em;
        }

        .topStaff {
            border-color: black;
            border-style: solid;
            border-top-width: 2px;
            border-left-width: 2px;
            border-right-width: 2px;
            border-bottom-width: 2px;
            max-width: 12em;
        }

        .nextStaff {
            border-color: black;
            border-style: solid;
            border-top-width: 0px;
            border-left-width: 2px;
            border-right-width: 2px;
            border-bottom-width: 2px;
            max-width: 12em;
        }

        .offStaff {
            background-color: #E0E0E0;
            font-weight: normal;
            padding-left: 4px;
        }

        .onStaff {
            background-color: #FFFFDD;
            font-weight: bold;
            padding-left: 4px;
        }
    </style>

    <script>

    var EditStartDate = new Date("@Model.Event.StartTime.ToString()");

    $(document).ready(function () {

        costTent = $("#Event_CostTent").val();
        if (!!costTent && (costTent.indexOf("~~~") === 0)) {
            $("#Event_CostTent").val(costTent.substr(3));
        }

        $("#Event_Type").change(function () {
            let eName = $("#Event_Type option:selected").text();
            let eYear = EditStartDate.getFullYear();
            let eDesc = $("#Event_Description").val().trim();
            if (!eDesc && ((eName.indexOf(" Retreat") != -1) || (eName.indexOf(" Week") != -1) || (eName.indexOf(" Meeting") != -1))) {
                let desc = eYear + " " + eName;
                $("#Event_Description").val(desc);
            }

            $("#Event_StartTime").trigger('change');
        });

        $("#Event_StartTime").change(function () {
            let sDate = $("#Event_StartTime").val();
            let eDate = $("#Event_EndTime").val();
            let eType = $("#Event_Type option:selected").text();
            if ((sDate.indexOf("T") != -1) && (eDate.trim().length == 0) && (eType.length > 5)) {
                let sDT = new Date(Date.parse(sDate));
                let eDT = new Date(sDT);
                if (eType.indexOf(" Retreat") != -1) {
                    eDT.setDate(eDT.getDate() + 3);
                    let dts = eDT.getFullYear().toString() + "-" + (eDT.getMonth() + 1).toString().padStart(2, 0) + "-" + eDT.getDate().toString().padStart(2, 0) + "T" + eDT.getHours().toString().padStart(2, 0) + ":" + eDT.getMinutes().toString().padStart(2, 0);
                    $("#Event_EndTime").val(dts);
                } else if (eType.indexOf(" Week") != -1) {
                    eDT.setDate(eDT.getDate() + 7);
                    let dts = eDT.getFullYear().toString() + "-" + (eDT.getMonth() + 1).toString().padStart(2, 0) + "-" + eDT.getDate().toString().padStart(2, 0) + "T" + eDT.getHours().toString().padStart(2, 0) + ":" + eDT.getMinutes().toString().padStart(2, 0);
                    $("#Event_EndTime").val(dts);
                }
            }
        });

        if (window.location.href.indexOf("EventDoc=1") != -1) {
            $("#Event_ContractLink").val(sessionStorage.getItem("EventDocFolder") + " > " + sessionStorage.getItem("EventDocFile"));
            sessionStorage.setItem("EventDocFolder", "");
            sessionStorage.setItem("EventDocFile", "");
            sessionStorage.setItem("EventDocReturn", "");

            let costTent = $("#Event_CostTent").val();
            if (!!costTent && (costTent.indexOf("~~~") === 0)) {
                $("#Event_CostTent").val(costTent.substr(3));
            }
            $("#OpenDoc").prop("disabled", true);
        }

        function openFileShare() {
            var docVal = $("#Event_ContractLink").val();
            var dvp = docVal.split(" > ");
            if (!dvp || dvp.length !== 2) {
                return;
            }

            var parameters = "{'Folder':'" + dvp[0].trim() + "','File':'" + dvp[1].trim() + "'}";
            $.ajax({
                url: "/Docs?handler=FileShare",
                contentType: "application/json",
                dataType: "json",
                data: parameters,
                success: function (response) {
                    if (response.indexOf("ERROR~:") === -1) {
                        if (response.indexOf("http") == 0) {
                            window.location.href = response;
                        }
                        else {
                            window.location.href = "../" + response;
                        }
                    }
                },
                complete: function (data) {
                    costTent = $("#Event_CostTent").val();
                    if (!!costTent && (costTent.indexOf("~~~") === 0)) {
                        $("#Event_CostTent").val(costTent.substr(3));
                    }
                }
            });
        }

        $("#OpenDoc").click(function () {
            let costTent = $("#Event_CostTent").val();
            if (!costTent || (costTent.indexOf("~~~") != 0)) {
                costTent = "~~~" + (!!costTent ? costTent : "");
                $("#Event_CostTent").val(costTent);
            }
            openFileShare();
        });

        $("#DelBtn").click(function () {
            if (confirm("Delete Event : " +  $("#Event_Description").val() + "?")) {
                var parameters = "{'eventId':'" + @Model.Event.Id + "'}";
                $.ajax({
                    url: "/Events/Edit?handler=DeleteEvent",
                    contentType: "application/json",
                    dataType: "json",
                    data: parameters,
                    success: function (response) {
                        if (response.indexOf("ERROR~:") === -1) {
                            alert("Event deleted.");
                        }
                    },
                    fail: function (response) {
                       alert("ERROR : Event NOT deleted.");
                    },
                    complete: function (response) {
                        localStorage.setItem("refreshEvs", "true");
                        window.history.go(-1);
                    }
                });
            }
        });

        $(document).on('click', "[id^=srole]", function () {
            $("#" + this.id).toggleClass("onStaff offStaff");
        });

        $('#EventForm').submit(function () {
            alert("Submit");

            var srolls = 0;
            $("div[id^=srole]").each(function (index) {
                if ($(this).hasClass("onStaff")) {
                    srolls |= parseInt($(this).attr("value"));
                }
            });
            alert(srolls);
        });

    });

    function getDoc() {
        $("#OpenDoc").prop("disabled", true);
        let costTent = $("#Event_CostTent").val();
        if (!costTent || (costTent.indexOf("~~~") != 0)) {
            costTent = "~~~" + (!!costTent ? costTent : "");
            $("#Event_CostTent").val(costTent);
        }
       sessionStorage.setItem("EventDocReturn", window.location.href + "&EventDoc=1");
       window.location.href = "/Docs?selectStr=Event";
    }

    </script>
</head>

<body>

    @if (ViewData["EventError"].ToString().Length > 0)
    {
        <span style="color:red">@Html.Raw(ViewData["EventError"])</span>
    }

<form class="form-horizontal" method="post" id="EventForm" enctype="multipart/form-data">

    <input type="hidden" asp-for="Event.Staff" />
    <input type="hidden" asp-for="Event.Id" />
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="row">
        <div class="form-group row ediv lpad">
            <label asp-for="Event.Type" class="control-label col-md-2 ILabel">Type:</label>
            <div class="col-sm-10 IValue">
                <select asp-for="Event.Type" class="form-control" asp-items="ViewBag.Type"></select>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="form-group row ediv lpad">
            <label asp-for="Event.Description" class="control-label col-md-3 ILabel">Description:</label>
            <div class="col-sm-9 IValue">
                <input asp-for="Event.Description" class="form-control" />
                <span asp-validation-for="Event.Description" class="text-danger"></span>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-6 form-group row ediv lpad">
            <label asp-for="Event.StartTime" class="control-label ILabel">Start Time:</label>
            <div class=" IValue">
                <input asp-for="Event.StartTime" class="form-control lgi" />
                <span asp-validation-for="Event.StartTime" class="text-danger"></span>
            </div>
        </div>

        <div class="col-sm-6 form-group row ediv lpad">
            <label asp-for="Event.EndTime" class="control-label ILabel">End Time:</label>
            <div class="IValue">
                <input asp-for="Event.EndTime" class="form-control lgi" />
                <span asp-validation-for="Event.EndTime" class="text-danger"></span>
            </div>
        </div>
    </div>

    <div class="row">

    </div>

    <div class="ediv form-group" style="margin-left:-12px; padding:6px 6px 0px 6px">
        @{ int rowId = 0;
            foreach (var sr in ViewBag.StaffRoles)
            {
                if (rowId > 0)
                {
                    string srId = "srole" + rowId;
                    string spId = "spers" + rowId;
                    string staffCls = (rowId == 1) ? "topStaff" : "nextStaff";
                    string selClass = Model.IsStaffSelected(rowId) ? "onStaff" : "offStaff";
                    <div class="frow">
                        <div class="fcolumn @staffCls @selClass" id="@srId" value="@sr.Value">@sr.Text:</div>
                        <div class="fcolumn"><input id="@spId" /></div>
                    </div>
                }
                ++rowId;
            }
        }

        <div class="row form-group lpad">
            <div class="IValue">
                <select id="StaffRoles" class="form-control" style="max-width:15em" asp-items="ViewBag.StaffRoles"></select>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-4 form-group row ediv lpad">
            <label asp-for="Event.CostChild" class="control-label ILabel">Child $</label>
            <div class="IValue">
                <input asp-for="Event.CostChild" class="form-control" style="max-width: 6em;" />
                <span asp-validation-for="Event.CostChild" class="text-danger"></span>
            </div>
        </div>
        <div class="col-sm-4 form-group row ediv lpad">
            <label asp-for="Event.CostAdult" class="control-label ILabel">Adult $</label>
            <div class="IValue">
                <input asp-for="Event.CostAdult" class="form-control" style="max-width: 6em;" />
                <span asp-validation-for="Event.CostAdult" class="text-danger"></span>
            </div>
        </div>
        <div class="col-sm-4 form-group row ediv lpad">
            <label asp-for="Event.CostFamily" class="control-label ILabel">Family $</label>
            <div class="IValue">
                <input asp-for="Event.CostFamily" class="form-control" style="max-width: 6em;" />
                <span asp-validation-for="Event.CostFamily" class="text-danger"></span>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-4 form-group row ediv lpad">
            <label asp-for="Event.CostCabin" class="control-label ILabel">Cabin $</label>
            <div class="IValue">
                <input asp-for="Event.CostCabin" class="form-control" style="max-width: 6em;" />
                <span asp-validation-for="Event.CostCabin" class="text-danger"></span>
            </div>
        </div>
        <div class="col-sm-4 form-group row ediv lpad">
            <label asp-for="Event.CostLodge" class="control-label ILabel">Lodge $</label>
            <div class="IValue">
                <input asp-for="Event.CostLodge" class="form-control" style="max-width: 6em;" />
                <span asp-validation-for="Event.CostLodge" class="text-danger"></span>
            </div>
        </div>
        <div class="col-sm-4 form-group row ediv lpad">
            <label asp-for="Event.CostTent" class="control-label ILabel">Tent $</label>
            <div class="IValue">
                <input asp-for="Event.CostTent" class="form-control" style="max-width: 6em;" />
                <span asp-validation-for="Event.CostTent" class="text-danger"></span>
            </div>
        </div>
    </div>

    <div class="row">
        <span class="lpad" style="color:maroon; font-weight:bold">To add a Contract Link, First Create this Event then go back and Edit it.</span>
        <div class="form-group col-sm-12 lpad">
            <label asp-for="Event.ContractLink" class="control-label" ;padding-right:3px;"></label>
            <input type="text" id="EventDoc" style="padding-left:3px;padding-right:3px; border-style:inset; font-weight:bold" disabled />
            <button id="OpenDoc" style="margin-left:6px; margin-right:6px;" disabled><b>Open Doc</b></button>
            <button id="BrowseDoc" onclick="getDoc()" style="margin-right:6px;" disabled>Set Doc</button>
        </div>
    </div>

    <div class="row">
        <div class="form-group row ediv col-sm-12 lpad">
            <label asp-for="Event.ChurchId" class="control-label ILabel">Church:</label>
            <div class="IValue">
                <select asp-for="Event.ChurchId" class="form-control" asp-items="ViewBag.Church"></select>
            </div>
        </div>
    </div>

    <div class="form-group center">
        <span class="col-md-8">
            <input type="submit" id="SubmitEvent" value="Update" class="btn btn-primary" />
        </span>
        <span class="col-md-2">
            <input type="button" onclick="window.history.go(-1)" value="Cancel" />
        </span>
        <span class="col-md-2">
            <input type="button" id="DelBtn" value="Delete" class="alignRight" style="background-color: #FFCCCC" />
        </span>
    </div>

</form>

    <div>
        <a asp-page="./Index">Back to List</a>
    </div>

</body>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
