@page
@model CStat.EditInvModel
@using CStat.Models

@{
    //Layout = "_LayoutAction";
    ViewData["Title"] = "Edit Item";
    var photoPath = "~/images/ItmImg_" +  ( ((Model.EditItem.Upc != null) && (Model.EditItem.Upc.Length > 0)) ? Model.EditItem.Upc.Trim() + ".jpg" : "noimage.jpg");
    string UPCError = (ViewData["UPCError"] != null) ? (string)ViewData["UPCError"] : "";
    UPCError = UPCError.Trim();
    string ItemErrors = (ViewData["ItemErrors"] != null) ? (string)ViewData["ItemErrors"] : "";
    ItemErrors = ItemErrors.Trim();
}

<head>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.3/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx" crossorigin="anonymous"></script>   
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js" integrity="sha384-w1Q4orYjBQndcko6MimVbzY0tgp4pWB4lZ7lr30WKz0vr/aWKhXdBNmNb5D92v7s" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/gh/bgaze/bootstrap4-dialogs@1/dist/bootstrap4-dialogs.min.js"></script>

    <script>

        function changeUnits(selObj) {
            var selIdx = selObj.value;
            if (selIdx != -1) {
                var selText = selObj.options[selIdx].text;
                $("[id^=unitsId]").text(selText);
            }
        }

        function changePhoto() {
            $("#itemPhoto").attr("src", "");
            $("#itemPhoto").attr("alt", "_Photo Set");
        }

        function lookupUPC() {

            let upc = $("#EditItem_Upc").val().trim();
            if (upc.length == 12) {
                window.open("https://www.upcitemdb.com/upc/" + upc);
            }
        }

        $(document).ready(function () {

            document.getElementById('SubmitId2').addEventListener('click', (e) => {

                if ($("#EditItem_Upc").val().trim().length == 0) {
                    $("#UPCErrorId").removeClass("ErrorOff").addClass("ErrorOn");
                } else {
                    $("#UPCErrorId").removeClass("ErrorOn").addClass("ErrorOff");
                }

                if (($("#EditItem_Upc").val().trim().length == 0) ||
                    ($("#InventoryItem_Units").val() == 0) ||
                    ($("#EditItem_Size").val().trim().length == 0) ||
                    ($("#EditItem_Size").val() <= 0)) {
                    e.preventDefault();
                    $("#GenErrorId").removeClass("ErrorOff").addClass("ErrorOn");
                    return;
                }
                $("#GenErrorId").removeClass("ErrorOn").addClass("ErrorOff");
            });
        });
    </script>

    <style>

        .zoomin img {
            height: 120px;
            -webkit-transition: all 0.2s ease;
            -moz-transition: all 0.2s ease;
            -ms-transition: all 0.2s ease;
            transition: all 0.2s ease;
            z-index: 1000;
        }

            .zoomin img:hover {
                height: 240px;
            }

        .ILabel {
            padding-right: 2px;
        }

        .IValue {
            padding-top: 4px;
            padding-left: 4px;
        }

        .SValue {
            padding-top: 3px;
            padding-left: 4px;
            padding-right: 4px;
        }

        .ediv {
            border-width: 1px;
            border-style: solid;
            border-color: #C0FFC0;
            background-color: #F2FFF2;
            padding-bottom: 3px;
        }

        .pdiv {
            border-width: 1px;
            border-style: solid;
            border-color: #C0FFC0;
            background-color: #F2FFF2;
            padding-bottom: 3px;
        }

        .idiv {
            border-width: 3px;
            border-style: solid;
            border-color: #000000;
            margin-bottom: 5px;
        }

        .itemPhoto {
            margin-left: auto;
            margin-right: auto;
            height: 120px;
        }

        .alignLeft {
            float: left;
        }

        .alignRight {
            float: right;
        }

        .ErrorOn {
            color: red;
            display: block;
        }

        .ErrorOff {
            color: red;
            display: none;
        }

    </style>

</head>

<body>

    <div class="container">

        @{ if (ItemErrors.Length > 0)
            {
                <div style="color:red">@ItemErrors</div>
            }
            else
            {
                <div class="ErrorOff" id="GenErrorId">* UPC, Units and Units per Item are needed to be set & valid first.</div>
            }
        }

        <form class="form-horizontal" method="post" enctype="multipart/form-data">
            <div class="form-group ediv">
                <div class="col-sm-12 IValue">
                    <div class="zoomin ediv" style="float:left">
                        <img id="itemPhoto" src="@photoPath" alt="&nbsp;X" asp-append-version="true" />
                    </div>
                    <div class="custom-file">
                        <input asp-for="ItemPhoto" onchange="changePhoto()" class="custom-file-input form-control" />
                        <label class="custom-file-label">&nbsp;Click here to change photo</label>
                    </div>
                </div>
            </div>
            <div class="form-group ediv">
                <label class="control-label col-sm-4 ILabel" asp-for="EditItem.Name">Description: </label>
                <div class="col-sm-8 IValue">
                    @{Model.EditItem.Name = Model.EditItem.Name.Trim();}
                    <input asp-for="EditItem.Name" size="60" />
                    <span asp-validation-for="EditItem.Name" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group ediv">
                <label class="control-label col-sm-4 ILabel" onclick="lookupUPC()" asp-for="EditItem.Upc">UPC Barcode: </label>
                <div class="col-sm-8 IValue">
                    @{if (Model.EditItem.Upc == null)
                            Model.EditItem.Upc = "";
                        else
                            Model.EditItem.Upc = Model.EditItem.Upc.Trim();
                    }
                    <input type="text" asp-for="EditItem.Upc" size="14" />
                    <span asp-validation-for="EditItem.Upc" class="text-danger"></span>
                    @{if (UPCError.Length > 0)
                        {
                            <div style="color:red">@UPCError</div>
                        }
                        else
                        {
                            <div class="ErrorOff" id="UPCErrorId">* UPC needs to be set & valid first.</div>
                        }
                    }
                </div>
            </div>
            <div class="form-group ediv">
                <label asp-for="InventoryItem.Units" class="control-label col-sm-4 ILabel">Units:</label>
                <div class="col-sm-8 SValue">
                    @{
                        IList<SelectListItem> list = Enum.GetValues(typeof(InventoryItem.ItemUnits)).Cast<InventoryItem.ItemUnits>().Select(x => new SelectListItem { Text = x.ToString(), Value = ((int)x).ToString() }).ToList();
                        SelectList data = new SelectList(list, "Value", "Text");
                        var Selected = list[(Model.InventoryItem.Units.HasValue ? Model.InventoryItem.Units.Value : 0)].Text;
                    }
                    <select asp-for="InventoryItem.Units" class="form-control" asp-items="@data" onchange="changeUnits(this)" style="height: 2em; width: 6.5em; padding-bottom: 3px; padding-top: 3px"></select>
                    <span asp-validation-for="InventoryItem.Units" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group ediv">
                <label asp-for="EditItem.Size" class="control-label col-sm-4 ILabel">Units per Item: </label>
                <div class="col-sm-8 IValue">
                    <input type="text" asp-for="EditItem.Size" size="5" />&nbsp;<span id="unitsId1">@Selected</span>
                    <span asp-validation-for="EditItem.Size" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group ediv">
                <label asp-for="InventoryItem.ReorderThreshold" class="control-label col-sm-4 ILabel">Reorder when: </label>
                <div class="col-sm-8 IValue">
                    <input type="text" asp-for="InventoryItem.ReorderThreshold" size="5" />&nbsp;<span id="unitsId2">@Selected</span>
                    <span asp-validation-for="InventoryItem.ReorderThreshold" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group ediv">
                <label asp-for="InventoryItem.UnitsPerDay" class="control-label col-sm-4 ILabel">Usage per Day: </label>
                <div class="col-sm-8 IValue">
                    <input type="text" asp-for="InventoryItem.UnitsPerDay" size="5" />&nbsp;<span id="unitsId3">@Selected</span> / day consumed
                    <span asp-validation-for="InventoryItem.UnitsPerDay" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group ediv">
                <label asp-for="InventoryItem.Zone" class="control-label col-sm-4 ILabel">Storage Loc.</label>
                <div class="col-sm-8 SValue">
                    @{
                        Model.InventoryItem.Zone = Model.InventoryItem.Zone.HasValue ? Model.InventoryItem.Zone.Value : 0;
                        IList<SelectListItem> zlist = Enum.GetValues(typeof(InventoryItem.ItemZone)).Cast<InventoryItem.ItemZone>().Select(x => new SelectListItem { Text = x.ToString().Replace("_", " "), Value = ((int)x).ToString() }).ToList();
                        SelectList zdata = new SelectList(zlist, "Value", "Text");
                    }
                    <select asp-for="InventoryItem.Zone" class="form-control" asp-items="@zdata" style=" height: 2em; width: 12em; padding-bottom: 3px; padding-top: 3px"></select>
                    <span asp-validation-for="InventoryItem.Zone" class="text-danger"></span>
                </div>
            </div>

            @*<div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="InventoryItem.ItemId" class="control-label"></label>
                <select asp-for="InventoryItem.ItemId" class="form-control" asp-items="ViewBag.ItemId"></select>
                <span asp-validation-for="InventoryItem.ItemId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="InventoryItem.InventoryId" class="control-label"></label>
                <select asp-for="InventoryItem.InventoryId" class="form-control" asp-items="ViewBag.InventoryId"></select>
                <span asp-validation-for="InventoryItem.InventoryId" class="text-danger"></span>
            </div>
            <input type="hidden" asp-for="InventoryItem.Id" />
            <div class="form-group">
                <label asp-for="InventoryItem.CurrentStock" class="control-label"></label>
                <input asp-for="InventoryItem.CurrentStock" class="form-control" />
                <span asp-validation-for="InventoryItem.CurrentStock" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="InventoryItem.ReorderThreshold" class="control-label"></label>
                <input asp-for="InventoryItem.ReorderThreshold" class="form-control" />
                <span asp-validation-for="InventoryItem.ReorderThreshold" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="InventoryItem.Units" class="control-label"></label>
                <input asp-for="InventoryItem.Units" class="form-control" />
                <span asp-validation-for="InventoryItem.Units" class="text-danger"></span>
            </div>*@

            @*InventoryItem
            //ReorderThreshold
            //Units
            //UnitsPerDay
            //Zone*@
            @Html.HiddenFor(model => model.InventoryItem.ItemId)
            @Html.HiddenFor(model => model.InventoryItem.InventoryId)
            @Html.HiddenFor(model => model.InventoryItem.Id)
            @Html.HiddenFor(model => model.InventoryItem.CurrentStock)

            @Html.HiddenFor(model => model.InventoryItem.State)
            @Html.HiddenFor(model => model.InventoryItem.PersonId)

            @Html.HiddenFor(model => model.InventoryItem.OrderId)
            @Html.HiddenFor(model => model.InventoryItem.Date)

            @*Item
            //Name
            //Upc
            //Size*@
            @Html.HiddenFor(model => model.EditItem.MfgId)
            @Html.HiddenFor(model => model.EditItem.Units)
            @Html.HiddenFor(model => model.EditItem.Status)
            @Html.HiddenFor(model => model.EditItem.Id)

            <div class="form-group" style="text-align:center">
                <span class="col-md-8">
                    <input type="submit" value="Save" id="SubmitId2" class="btn btn-primary" />
                </span>
                <span class="col-md-2">
                    <input type="button" onclick="window.history.go(-1)" value="Cancel" />
                </span>
                <span class="col-md-2">
                    <input type="button" id="DelBtn" value="Delete" class="alignRight" style="background-color: #FFCCCC" />
                </span>
            </div>
            @section Scripts {
                @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
                <script>
                    $(document).ready(function () {
                        $('.custom-file-input').on("change", function () {
                            var fname = $(this).val().split("\\").pop();
                            $(this).next('.custom-file-label').html(fname);
                        });
                        $("#DelBtn").click(function () {
                            if (confirm('Delete Item From Inventory?')) {
                                var parameters = "{'invItemId':'" + @Model.InventoryItem.Id + "'}";
                                $.ajax({
                                    url: "/Inventory/Edit?handler=DeleteItem",
                                    contentType: "application/json",
                                    dataType: "json",
                                    data: parameters,
                                    success: function (response) {
                                        if (response.indexOf("ERROR~:") === -1) {
                                            alert("Item deleted from Inventory.");
                                        }
                                    },
                                    fail: function (response) {
                                       alert("ERROR : Item NOT deleted from Inventory.");
                                    }
                                });
                                window.history.go(-1);
                            }
                        });
                    });

                </script>
            }
        </form>
    </div>

    <div>
        <a asp-page="./Index">Back to List</a>
    </div>
</body>
