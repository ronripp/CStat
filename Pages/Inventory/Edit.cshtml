@page
@model CStat.EditInvModel
@using CStat.Models

@{
    ViewData["Title"] = "Edit Item";
    var photoPath = "~/images/ItmImg_" + ((Model.EditItem.Upc.Length > 0) ? Model.EditItem.Upc.Trim() + ".jpg" : "noimage.jpg");
}

<head>
   <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">

</head>

<style>

.ILabel {
    padding-right:2px;
}

.IValue {
    padding-top:4px;
     padding-left:4px;
}

.SValue {
    padding-top:3px;
    padding-left:4px;
    padding-right:4px;
}

.ediv {
  border-width:1px;
  border-style: solid;
  border-color: #C0FFC0;
  background-color: #F2FFF2;
  padding-bottom:3px;
}
.idiv {
  border-width:3px;
  border-style: solid;
  border-color: #000000;
  margin-bottom: 5px;
}

.itemPhoto {
    margin-left: auto;
    margin-right: auto;
}

</style>

<body>

    <div class="container">
        <div class="ediv" style="float:left">
        <img src="@photoPath" asp-append-version="true" class="itemPhoto" height="120">
        </div>
        <form class="form-horizontal" method="post" enctype="multipart/form-data">
            <div class="form-group ediv">
                <div class="col-sm-10 IValue">
                    <div class="custom-file">
                        <input asp-for="ItemPhoto" class="custom-file-input form-control" />
                        <label class="custom-file-label">Click here to change photo</label>
                    </div>
                </div>
            </div>
            <div class="form-group ediv">
                <label class="control-label col-sm-2 ILabel" asp-for="EditItem.Name">Description: </label>
                <div class="col-sm-10 IValue">
                    @{Model.EditItem.Name = Model.EditItem.Name.Trim();}
                    <input asp-for="EditItem.Name" size="60" />
                    <span asp-validation-for="EditItem.Name" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group ediv">
                <label class="control-label col-sm-2 ILabel" asp-for="EditItem.Upc">UPC Barcode: </label>
                <div class="col-sm-10 IValue">
                    @{if (Model.EditItem.Upc == null)
                        Model.EditItem.Upc = "";
                    else
                        Model.EditItem.Upc = Model.EditItem.Upc.Trim();
                    }
                    <input type="text" asp-for="EditItem.Upc" size="14" />
                    <span asp-validation-for="EditItem.Upc" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group ediv">
                <label asp-for="InventoryItem.Units" class="control-label col-sm-2 ILabel">Units:</label>
                <div class="col-sm-10 SValue">
                    @{
                    IList<SelectListItem> list = Enum.GetValues(typeof(InventoryItem.ItemUnits)).Cast<InventoryItem.ItemUnits>().Select(x => new SelectListItem { Text = x.ToString(), Value = ((int)x).ToString() }).ToList();
                    SelectList data = new SelectList(list, "Value", "Text");
                    var Selected = list[(Model.InventoryItem.Units.HasValue ? Model.InventoryItem.Units.Value : 0)].Text;
                    }
                    <select asp-for="InventoryItem.Units" class="form-control" asp-items="@data" style="height: 2em; width: 6.5em; padding-bottom: 3px; padding-top: 3px"></select>
                    <span asp-validation-for="InventoryItem.Units" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group ediv">
                <label asp-for="EditItem.Size" class="control-label col-sm-2 ILabel">Units per Item: </label>
                <div class="col-sm-10 IValue">
                    <input type="text" asp-for="EditItem.Size" size="5" />&nbsp;@Selected
                    <span asp-validation-for="EditItem.Size" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group ediv">
                <label asp-for="InventoryItem.ReorderThreshold" class="control-label col-sm-2 ILabel">Reorder when: </label>
                <div class="col-sm-10 IValue">
                    <input type="text" asp-for="InventoryItem.ReorderThreshold" size="5" />&nbsp;@Selected
                    <span asp-validation-for="InventoryItem.ReorderThreshold" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group ediv">
                <label asp-for="InventoryItem.UnitsPerDay" class="control-label col-sm-2 ILabel">Usage per Day: </label>
                <div class="col-sm-10 IValue">
                    <input type="text" asp-for="InventoryItem.UnitsPerDay" size="5" />&nbsp;@Selected / day consumed
                    <span asp-validation-for="InventoryItem.UnitsPerDay" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group ediv">
                <label asp-for="InventoryItem.Zone" class="control-label col-sm-2 ILabel">Storage Loc.</label>
                <div class="col-sm-10 SValue">
                    @{
                    Model.InventoryItem.Zone = Model.InventoryItem.Zone.HasValue ? Model.InventoryItem.Zone.Value : 0;
                    IList<SelectListItem> zlist = Enum.GetValues(typeof(InventoryItem.ItemZone)).Cast<InventoryItem.ItemZone>().Select(x => new SelectListItem { Text = x.ToString(), Value = ((int)x).ToString() }).ToList();
                    SelectList zdata = new SelectList(zlist, "Value", "Text");
                    }
                    <select asp-for="InventoryItem.Zone" class="form-control" asp-items="@zdata" style=" height: 2em; width: 12em; padding-bottom: 3px; padding-top: 3px"></select>
                    <span asp-validation-for="InventoryItem.Zone" class="text-danger"></span>
                </div>
            </div>

            @*<div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="InventoryItem.ItemId" class="control-label"></label>
                <select asp-for="InventoryItem.ItemId" class="form-control" asp-items="ViewBag.ItemId"></select>
                <span asp-validation-for="InventoryItem.ItemId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="InventoryItem.InventoryId" class="control-label"></label>
                <select asp-for="InventoryItem.InventoryId" class="form-control" asp-items="ViewBag.InventoryId"></select>
                <span asp-validation-for="InventoryItem.InventoryId" class="text-danger"></span>
            </div>
            <input type="hidden" asp-for="InventoryItem.Id" />
            <div class="form-group">
                <label asp-for="InventoryItem.CurrentStock" class="control-label"></label>
                <input asp-for="InventoryItem.CurrentStock" class="form-control" />
                <span asp-validation-for="InventoryItem.CurrentStock" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="InventoryItem.ReorderThreshold" class="control-label"></label>
                <input asp-for="InventoryItem.ReorderThreshold" class="form-control" />
                <span asp-validation-for="InventoryItem.ReorderThreshold" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="InventoryItem.Units" class="control-label"></label>
                <input asp-for="InventoryItem.Units" class="form-control" />
                <span asp-validation-for="InventoryItem.Units" class="text-danger"></span>
            </div>*@

            @*InventoryItem
            //ReorderThreshold
            //Units
            //UnitsPerDay
            //Zone*@
            @Html.HiddenFor(model => model.InventoryItem.ItemId)
            @Html.HiddenFor(model => model.InventoryItem.InventoryId)
            @Html.HiddenFor(model => model.InventoryItem.Id)
            @Html.HiddenFor(model => model.InventoryItem.CurrentStock)

            @Html.HiddenFor(model => model.InventoryItem.State)
            @Html.HiddenFor(model => model.InventoryItem.PersonId)

            @Html.HiddenFor(model => model.InventoryItem.OrderId)
            @Html.HiddenFor(model => model.InventoryItem.Date)

            @*Item
            //Name
            //Upc
            //Size*@
            @Html.HiddenFor(model => model.EditItem.MfgId)
            @Html.HiddenFor(model => model.EditItem.Units)
            @Html.HiddenFor(model => model.EditItem.Status)
            @Html.HiddenFor(model => model.EditItem.Id)

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
            @section Scripts {
                @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
                <script>
                    $(document).ready(function () {
                        $('.custom-file-input').on("change", function () {
                            var fname = $(this).val().split("\\").pop();
                            $(this).next('.custom-file-label').html(fname);
                        });
                    });
                </script>
            }
        </form>
    </div>

    <div>
        <a asp-page="./Index">Back to List</a>
    </div>
</body>
