@page
@model CStat.CreateInvModel
@using CStat.Models
@Html.AntiForgeryToken()

@{
    //Layout = "_LayoutAction";
    string invTyp = Request.Query["InvType"];
    if (string.IsNullOrEmpty(invTyp)) invTyp = "0";
    ViewData["Title"] = (invTyp == "1" ? Html.Raw("Create <b>MATERIAL</b> Item") : Html.Raw("Create <b>FOOD</b> Item"));
    var photoPath = "~/items/ItmImg_" + (((Model.CreateItem.Upc != null) && (Model.CreateItem.Upc.Length > 0)) ? Model.CreateItem.Upc.Trim() + ".jpg" : "noimage.jpg");
    string UPCError = (ViewData["UPCError"] != null) ? (string)ViewData["UPCError"] : "";
    UPCError = UPCError.Trim();
    string ItemErrors = (ViewData["ItemErrors"] != null) ? (string)ViewData["ItemErrors"] : "";
    ItemErrors = ItemErrors.Trim();
}

<head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.3/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.3/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/gh/bgaze/bootstrap4-dialogs@1/dist/bootstrap4-dialogs.min.js"></script>

    <script>

        function changeUnits(selObj) {
            var selIdx = selObj.value;
            if (selIdx != -1) {
                var selText = selObj.options[selIdx].text;
                $("[id^=unitsId]").text(selText);
            }
        }

        function changePhoto() {
            $("#picId").attr("src", "");
            $("#picId").attr("alt", "_Photo Set");
        }

        function lookupUPC() {
            let upc = $("#CreateItem_Upc").val().trim();
            if (upc.length == 12) {
                window.open("https://www.upcindex.com/" + upc);
            }
        }

        $(document).ready(function () {

            function keepSessionActive() {
                setTimeout(function () { pingCSServer(); }, 30000);
            }

            function pingCSServer() {
                jQuery.ajax({
                    url: "/Inventory/Create?handler=PingCInv",
                    type: "POST",
                    data: "ping",
                    async: true,
                    headers: {
                        RequestVerificationToken:
                            $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    dataType: "text",
                    success: function (res) {
                        keepSessionActive()
                    },
                    error: function (res) {
                    },
                    complete: function (res) {
                    }
                });
            }

            keepSessionActive();

            document.getElementById('SubmitId2').addEventListener('click', (e) => {

                if ($("#CreateItem_Upc").val().trim().length == 0) {
                    $("#UPCErrorId").removeClass("ErrorOff").addClass("ErrorOn");
                } else {
                    $("#UPCErrorId").removeClass("ErrorOn").addClass("ErrorOff");
                }

                if (($("#CreateItem_Upc").val().trim().length == 0) ||
                    ($("#InventoryItem_Units").val() == 0) ||
                    ($("#CreateItem_Size").val().trim().length == 0) ||
                    ($("#CreateItem_Size").val() <= 0)) {
                    e.preventDefault();
                    $("#GenErrorId").removeClass("ErrorOff").addClass("ErrorOn");
                    $("#GenErrorId2").removeClass("ErrorOff").addClass("ErrorOn");
                    return;
                }
                $("#GenErrorId").removeClass("ErrorOn").addClass("ErrorOff");
                $("#GenErrorId2").removeClass("ErrorOn").addClass("ErrorOff");
            });

            document.getElementById('DelLink1').addEventListener('click', (e) => {
                if (confirm('Are you sure you want to Delete Buy Link?')) {
                    let linkObj = $("#Link1Div");
                    let urlObj = $("#Url1Div");
                    linkObj.hide();
                    urlObj.show();
                }
                e.preventDefault();
            });

            document.getElementById('DelLink2').addEventListener('click', (e) => {
                if (confirm('Are you sure you want to Delete Buy Link?')) {
                    let linkObj = $("#Link2Div");
                    let urlObj = $("#Url2Div");
                    linkObj.hide();
                    urlObj.show();
                }
                e.preventDefault();
            });

            document.getElementById('DelLink3').addEventListener('click', (e) => {
                if (confirm('Are you sure you want to Delete Buy Link?')) {
                    let linkObj = $("#Link3Div");
                    let urlObj = $("#Url3Div");
                    linkObj.hide();
                    urlObj.show();
                }
                e.preventDefault();
            });

            function GetPrice(id) {
                let $anc = $("#" + id);
                if (!$anc || ($anc.length === 0)) {
                    return;
                }
                let hostStr = $anc.html();
                if (hostStr.indexOf('$') != -1) {
                    return; // Already has a price
                }
                var link = encodeURIComponent($anc.attr('href'));

                var parameters = "{'id':'" + id + "','host':'" + encodeQuotes(hostStr) + "','link':'" + link + "'}";
                $.ajax({
                    url: "/Inventory/Create?handler=UrlPrice",
                    contentType: "application/json",
                    dataType: "json",
                    data: parameters,
                    success: function (response) {
                        if (response.indexOf(" $") !== -1) {
                            resFields = response.split(';')
                            if (resFields.length === 2) {
                                var $robj = $("#" + resFields[0].trim());
                                if (!$robj || ($robj.length === 0)) {
                                    return;
                                }
                                var robjStr = $robj.html();
                                if (robjStr.indexOf('$') == -1) {
                                    $robj.html(hostStr + "<b>" + resFields[1] + "</b>");
                                }
                            }
                        }
                    }
                });
            }

            $('#InvItemForm').submit(function () {
                let url1Obj = $("#buy1");
                if (!!url1Obj && (url1Obj.length !== 0) && url1Obj.is(":visible") && (url1Obj.val().trim().length == 0)) {
                    url1Obj.val("_.");
                }
                let url2Obj = $("#buy2");
                if (!!url2Obj && (url2Obj.length !== 0) && url2Obj.is(":visible") && (url2Obj.val().trim().length == 0)) {
                    url2Obj.val("_.");
                }
                let url3Obj = $("#buy3");
                if (!!url3Obj && (url3Obj.length !== 0) && url3Obj.is(":visible") && (url3Obj.val().trim().length == 0)) {
                    url3Obj.val("_.");
                }
            });

            GetPrice("Anc1");
            GetPrice("Anc2");
            GetPrice("Anc3");
        });

    </script>

</head>

<style>

    .ILabel {
        padding-right: 2px;
    }

    .IValue {
        padding-top: 4px;
        padding-left: 4px;
    }

    .SValue {
        padding-top: 3px;
        padding-left: 4px;
        padding-right: 4px;
    }

    .ediv {
        border-width: 1px;
        border-style: solid;
        border-color: #C0FFC0;
        background-color: #F2FFF2;
        padding-bottom: 3px;
    }

    .idiv {
        border-width: 3px;
        border-style: solid;
        border-color: #000000;
        margin-bottom: 5px;
    }

    .itemPhoto {
        margin-left: auto;
        margin-right: auto;
    }

    .ErrorOn {
        color: red;
        display: block;
    }

    .ErrorOff {
        color: red;
        display: none;
    }
</style>

<body>

    <div class="container">

        @{ if (ItemErrors.Length > 0)
            {
                <div style="color:red">@ItemErrors</div>
            }
            else
            {
                <div class="ErrorOff" id="GenErrorId">* UPC, Units and Units per Item are needed to be set & valid first.</div>
            }
            string invType = Request.Query["InvType"];
            if (string.IsNullOrEmpty(invType)) invType = "0";
        }
        <div class="ediv" style="float:left">
            <img src="@photoPath" alt="&nbsp;X" id="picId" asp-append-version="true" class="itemPhoto" height="120">
        </div>
        <form class="form-horizontal" method="post" enctype="multipart/form-data">
            <div class="form-group ediv">
                <div class="col-sm-10 IValue">
                    <div class="custom-file">
                        <input asp-for="ItemPhoto" onchange="changePhoto()" class="custom-file-input form-control" />
                        <label class="custom-file-label">Click here to change photo</label>
                    </div>
                </div>
            </div>
            <div class="form-group ediv row">
                <label class="control-label col-sm-2 ILabel" asp-for="CreateItem.Name">Description: </label>
                <div class="col-sm-10 IValue">
                    @{Model.CreateItem.Name = Model.CreateItem.Name.Trim();}
                    <input asp-for="CreateItem.Name" size="60" />
                    <span asp-validation-for="CreateItem.Name" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group ediv row">
                <label class="control-label col-sm-2 ILabel" asp-for="CreateItem.Upc" onclick="lookupUPC()">UPC Barcode: </label>
                <div class="col-sm-10 IValue">
                    @{if (Model.CreateItem.Upc == null)
                            Model.CreateItem.Upc = "";
                        else
                            Model.CreateItem.Upc = Model.CreateItem.Upc.Trim();
                    }
                    <input type="text" asp-for="CreateItem.Upc" size="14" />
                    <span asp-validation-for="CreateItem.Upc" class="text-danger"></span>
                    @{if (UPCError.Length > 0)
                        {
                            <div style="color:red">@UPCError</div>
                        }
                        else
                        {
                            <div class="ErrorOff" id="UPCErrorId">* UPC needs to be set & valid first.</div>
                        }
                    }
                </div>
            </div>
            <div class="form-group ediv row">
                <label asp-for="InventoryItem.ExpectedCost" class="control-label col-sm-2 ILabel">Expected Cost $</label>
                <div class="col-sm-10 IValue">
                    <input type="text" asp-for="InventoryItem.ExpectedCost" size="5" />&nbsp;
                    <span asp-validation-for="InventoryItem.ExpectedCost" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group ediv row">
                <div id="Url1Div" style="padding-left:4px;" class="row">
                    <label class="control-label col-sm-3 ILabel style=" text for="buy1">Set #1 Buy URL:</label>
                    <div class="col-sm-9 BValue">
                        <input type="text" asp-for="Buy1URL" id="buy1" size="60" />
                    </div>
                </div>

                <div id="Url2Div" style="padding-left:4px;" class="row">
                    <label class="control-label col-sm-3 ILabel style=" text for="buy2">Set #2 Buy URL:</label>
                    <div class="col-sm-9 BValue">
                        <input type="text" asp-for="Buy2URL" id="buy2" size="60" />
                    </div>
                </div>
                <div id="Url3Div" style="padding-left:4px;" class="row">
                    <label class="control-label col-sm-3 ILabel style=" text for="buy3">Set #3 Buy URL:</label>
                    <div class="col-sm-9 BValue">
                        <input type="text" asp-for="Buy3URL" id="buy3" size="60" />
                    </div>
                </div>
            </div>

            <div class="form-group ediv">
                <label asp-for="InventoryItem.Units" class="control-label col-sm-2 ILabel">Units:</label>
                <div class="col-sm-10 SValue">
                    @{
                        IList<SelectListItem> list = Enum.GetValues(typeof(InventoryItem.ItemUnits)).Cast<InventoryItem.ItemUnits>().Select(x => new SelectListItem { Text = x.ToString(), Value = ((int)x).ToString() }).ToList();
                        SelectList data = new SelectList(list, "Value", "Text");
                        var Selected = list[(Model.InventoryItem.Units.HasValue ? Model.InventoryItem.Units.Value : 0)].Text;
                    }
                    <select asp-for="InventoryItem.Units" class="form-control" asp-items="@data" onchange="changeUnits(this)" style="height: 2em; width: 7.5em; padding-bottom: 3px; padding-top: 3px"></select>
                    <span asp-validation-for="InventoryItem.Units" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group ediv">
                <label asp-for="CreateItem.Size" class="control-label col-sm-2 ILabel">Units per Item: </label>
                <div class="col-sm-10 IValue">
                    <input type="text" asp-for="CreateItem.Size" size="5" />&nbsp;<span id="unitsId1">@Selected</span>
                    <span asp-validation-for="CreateItem.Size" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group ediv">
                <label asp-for="InventoryItem.ReorderThreshold" class="control-label col-sm-2 ILabel">Reorder when: </label>
                <div class="col-sm-10 IValue">
                    <input type="text" asp-for="InventoryItem.ReorderThreshold" size="5" />&nbsp;<span id="unitsId2">@Selected</span>
                    <span asp-validation-for="InventoryItem.ReorderThreshold" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group ediv">
                <label asp-for="InventoryItem.UnitsPerDay" class="control-label col-sm-2 ILabel">Usage per Day: </label>
                <div class="col-sm-10 IValue">
                    <input type="text" asp-for="InventoryItem.UnitsPerDay" size="5" />&nbsp;<span id="unitsId3">@Selected</span> / day consumed
                    <span asp-validation-for="InventoryItem.UnitsPerDay" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group ediv">
                <label asp-for="InventoryItem.Zone" class="control-label col-sm-2 ILabel">Storage Loc.</label>
                <div class="col-sm-10 SValue">
                    @{

                        Model.InventoryItem.Zone = Model.InventoryItem.Zone.HasValue ? Model.InventoryItem.Zone.Value : 0;
                        IList<SelectListItem> zlist = invType == "1" ?
                                                         Enum.GetValues(typeof(InventoryItem.ItemZoneM)).Cast<InventoryItem.ItemZoneM>().Select(x => new SelectListItem { Text = x.ToString().Replace("_", " "), Value = ((int)x).ToString() }).ToList()
                                                         : Enum.GetValues(typeof(InventoryItem.ItemZoneF)).Cast<InventoryItem.ItemZoneF>().Select(x => new SelectListItem { Text = x.ToString().Replace("_", " "), Value = ((int)x).ToString() }).ToList();
                        SelectList zdata = new SelectList(zlist, "Value", "Text");
                    }
                    <select asp-for="InventoryItem.Zone" class="form-control" asp-items="@zdata" style=" height: 2em; width: 12em; padding-bottom: 3px; padding-top: 3px"></select>
                    <span asp-validation-for="InventoryItem.Zone" class="text-danger"></span>
                </div>
            </div>

            @*InventoryItem
        //ReorderThreshold
        //Units
        //UnitsPerDay
        //Zone*@
            @Html.HiddenFor(model => model.InventoryItem.ItemId)
            @Html.HiddenFor(model => model.InventoryItem.InventoryId)
            @Html.HiddenFor(model => model.InventoryItem.Id)
            @Html.HiddenFor(model => model.InventoryItem.CurrentStock)

            @Html.HiddenFor(model => model.InventoryItem.State)
            @Html.HiddenFor(model => model.InventoryItem.PersonId)

            @Html.HiddenFor(model => model.InventoryItem.OrderId)
            @Html.HiddenFor(model => model.InventoryItem.Date)

            @*Item
        //Name
        //Upc
        //Size*@
            @Html.HiddenFor(model => model.CreateItem.MfgId)
            @Html.HiddenFor(model => model.CreateItem.Units)
            @Html.HiddenFor(model => model.CreateItem.Status)
            @Html.HiddenFor(model => model.CreateItem.Id)

            @{ if (ItemErrors.Length > 0)
                {
                    <div style="color:red">@ItemErrors</div>
                }
                else
                {
                    <div class="ErrorOff" id="GenErrorId2">* UPC, Units and Units per Item are needed to be set & valid first.</div>
                }
            }
            <div class="form-group" style="text-align:center">
                <span class="col-md-10">
                    <input type="submit" value="Save" id="SubmitId2" class="btn btn-primary" />
                </span>
                <span class="col-md-2">
                    <input type="button" onclick="window.history.go(-1)" value="Cancel" />
                </span>
            </div>
            @section Scripts {
                @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
                <script>
                    $(document).ready(function () {
                        $('.custom-file-input').on("change", function () {
                            var fname = $(this).val().split("\\").pop();
                            $(this).next('.custom-file-label').html(fname);
                        });
                    });

                </script>
            }
        </form>
    </div>

    <div>
        <a asp-page="./Index">Back to List</a>
    </div>
</body>
