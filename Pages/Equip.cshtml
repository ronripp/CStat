@page
@model CStat.Pages.EquipModel
@using Common

    @{
        ViewData["Title"] = "Equip";
        Layout = "_LayoutEquip";

    }

    <head>
        @*<meta name="viewport" content="width=device-width, initial-scale=1.0">*@
        <meta name="viewport" content="width=device-width, minimal-ui">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.3/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
        <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.3/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/gh/bgaze/bootstrap4-dialogs@1/dist/bootstrap4-dialogs.min.js"></script>
        <script type="text/javascript" src="jquery.svg.js"></script>

        <style>
            #container {
                background-color: black;
                color: greenyellow;
                padding: 0px;
            }

            .erow {
                height: 12px;
                max-height: 12px;
            }

            #container td, #container th {
                vertical-align: middle;
                padding: 3px;
            }

            .table td, .table th {
                padding: .75rem;
                vertical-align: top;
                border-top: 1px solid #dee2e6;
            }

            .eqTitle {
                font-size: 1.2em;
                background-color: black;
                color: #E8FFC0;
            }

            .eqDateTime {
                white-space: pre-line;
            }

            .greenClass {
                padding-left: 3px;
                padding-right: 3px;
                font-size: 1.5em;
                background-color: black;
                color: greenyellow;
            }

            .yellowClass {
                padding-left: 3px;
                padding-right: 3px;
                font-size: 1.5em;
                background-color: yellow;
                color: black;
            }

            .redClass {
                padding-left: 3px;
                padding-right: 3px;
                font-size: 1.5em;
                background-color: red;
                color: black;
            }
        </style>

        <script>

        var gRowHeight = 0;

        function setRowHeight() {

            const elem = document.documentElement;
            if (elem.requestFullscreen) { elem.requestFullscreen() }

            let hdrDiv = document.querySelector("header");
            //let ftrDiv = document.querySelector("footer");
            let hfHeight = 0;
            if (!!hdrDiv) {
                hfHeight += hdrDiv.clientHeight;
            }
            //if (!!ftrDiv) {
            //    hfHeight += ftrDiv.clientHeight;
            //}


            let totW = $("#tbodyId").width();
            let totH = Math.min(document.documentElement.clientHeight, window.innerHeight || 0);
            let hdrH = !!hdrDiv ? hdrDiv.clientHeight : Math.round(totH / 10);
            let h = Math.round(totH - (1.6 * hdrH));
            gRowHeight = Math.round((h / (@Model.ActEq.Count + .5)) - 12);
            let rectHeight = Math.max(30, Math.min(100, gRowHeight - 26));

            $(".erow").css("max-height", gRowHeight + "px");
            $(".erow").css("height", gRowHeight + "px");

            let w = 150;
            if (totW > 500) {
                w += Math.min(250, totW - 500);
            }

            //$(".ChartSVG").each(function (index) {
            //    $(this).width(w);
            //    $(this).height(rectHeight);
            //});
            //$(".ChartRect").each(function (index) {
            //    $(this).width(w);
            //    $(this).height(rectHeight);
            //});
        }

        screen.orientation.addEventListener("change", function (e) { setRowHeight(); }, false);

        $(document).ready(function () {

            const elem = document.documentElement;
            if (elem.requestFullscreen) { elem.requestFullscreen() }

        });

        </script>

    </head>
    <body onload="setRowHeight()" onresize="setRowHeight()">
        <table class="table" id="container">
            <tbody id="tbodyId">
            @for (int i = 0; i < Model.ActEq.Count; ++i)
            {
                <tr class="erow">
                    <td class="eqTitle">
                        @Model.ActEq[i].Title
                    </td>
                    <td>
                        <span class="@Model.GetColorClass(Model.ActEq[i].PropName)"><b>@Model.ActEqVal(i)</b></span> @Model.ActEqUnits(i)
                    </td>
                    <td>
                        <svg class="ChartSVG" style="padding-top:10px; padding-bottom:10px;" width="100%" height="100%">
                            @{
                                double CH = Model.ActEq[i].ChartTop - Model.ActEq[i].ChartBottom;
                                double CBot = Model.ActEq[i].ChartBottom;

                                double RTop = 100 * (Model.ActEq[i].RedTop - CBot) / CH;
                                double RBot = 100 * (Model.ActEq[i].RedBottom - CBot) / CH;
                                double GTop = 100 * (Model.ActEq[i].GreenTop - CBot) / CH;
                                double GBot = 100 * (Model.ActEq[i].GreenBottom - CBot) / CH;
                                string ValStr = Model.ActEqVal(i);
                                double ValRaw = (!ValStr.StartsWith("-") ? double.Parse(ValStr) : 0);
                                double Val = 100 - (100 * (ValRaw - CBot) / CH);
                                double VY = Math.Max(0, Math.Min(Val, 100));

                                double GH = GTop - GBot;
                                double GY = 100 - GTop;

                                double AY1 = 0, AH1 = 0;
                                double AY2 = 0, AH2 = 0;
                                double RY1 = 0, RH1 = 0;
                                double RY2 = 0, RH2 = 0;

                                if (RTop > GTop)
                                {
                                    AH1 = RTop - GTop;
                                    AY1 = 100 - RTop;
                                    RH1 = 100 - RTop;
                                    RY1 = 0;
                                }

                                if (RBot < GBot)
                                {
                                    AH2 = GBot - RBot;
                                    AY2 = 100 - GBot;
                                    RH2 = RBot;
                                    RY2 = 100 - RBot;
                                }
                            }
                            @*<rect class="ChartRect" width="100%" height="100%" style="fill:rgb(0,0,128);stroke-width:2;stroke:rgb(0,255,255)" />*@

                            <rect class="ChartRect" x="0%" y="@AY1.ToString("0.###")%" width="100%" height="@AH1.ToString("0.###")%" style="fill:rgb(54,54,0);" />
                            <rect class="ChartRect" x="0%" y="@AY2.ToString("0.###")%" width="100%" height="@AH2.ToString("0.###")%" style="fill:rgb(54,54,0);" />

                            <rect class="ChartRect" x="0%" y="@RY1.ToString("0.###")%" width="100%" height="@RH1.ToString("0.###")%" style="fill:rgb(64,0,0);" />
                            <rect class="ChartRect" x="0%" y="@RY2.ToString("0.###")%" width="100%" height="@RH2.ToString("0.###")%" style="fill:rgb(64,0,0);" />

                            <rect class="ChartRect" x="0%" y="@GY.ToString("0.###")%" width="100%" height="@GH.ToString("0.###")%" style="fill:rgb(0,64,0);" />

                            <rect class="ChartRect" x="5%" y="45%" width="3" height="3" style="fill:rgb(255,255,255);" />
                            <rect class="ChartRect" x="10%" y="48%" width="3" height="3" style="fill:rgb(255,255,255);" />
                            <rect class="ChartRect" x="15%" y="46%" width="3" height="3" style="fill:rgb(255,255,255);" />

                            <rect class="ChartRect" x="0%" y="@VY.ToString("0.###")%" width="100%" height="3" style="fill: @Model.ActEq[i].GetColor(ValRaw,false);" />

                            @*<text x="0%" y="@GY%" fill="#00FF00">@Model.ActEq[i].GreenTop</text>*@
                            @*<polyline points="0%,40% 10%,45% 20%,48% 30%,56% 40%,60% 50%,60% 60%,52% 70%,50%" style="fill:white;stroke:white;stroke-width:3" />*@
                        </svg>
                    </td>
                    <td class="eqDateTime">
                        @Model.ActEqDT(i)
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </body>