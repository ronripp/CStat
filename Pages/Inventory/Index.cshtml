@page
@model CStat.IndexInvModel

@{
    ViewData["Title"] = "Inventory";
}

    <head>
        @using System.Web;
        @using CStat.Models;

        <style>
            a {
                cursor: pointer;
            }

            .table th {
                padding: 0.1rem;
                color: lightgray;
            }

            .table td {
                padding: 0.5rem;
            }

            tr:nth-child(even) {background-color: #FFFFD0;}

            .InStockBtn {
                background-color: #E0FFE0; /* Green */
                border-radius: 8px;
                border: solid;
                border-color: black;
                border-width: 1px;
                color: black;
                text-align: center;
                text-decoration: none;
                display: inline-block;
                cursor: pointer;
            }

            .OpenNeedBtn {
                background-color: #FF0000; /* Red */
                border-radius: 8px;
                border: solid;
                border-color: Black;
                border-width: 2px;
                color: white;
                text-align: center;
                text-decoration: none;
                display: inline-block;
                cursor: pointer;
            }

            .TakenNeedBtn {
                background-color: #FFFF00; /* Yellow */
                border-radius: 8px;
                border: solid;
                border-color: black;
                border-width: 2px;
                color: black;
                text-align: center;
                text-decoration: none;
                display: inline-block;
                cursor: pointer;
            }

            .StockBtn {
                background-color: #E0FFE0; /* Green */
                border-radius: 8px;
                border: solid;
                border-color: Black;
                border-width: 2px;
                color: gray;
                text-align: center;
                text-decoration: none;
                display: inline-block;
                cursor: pointer;
            }

        </style>

        <script type="text/javascript">

            var cur_StockInvItemId = -1;

            function onFocus(invItemId) {
                cur_StockInvItemId = invItemId;
            }

        @{
            var LoginPid = -1;
            var LoginDisplayName = "";
            Person p = Model.GetPersonFromEMail(User.Identity.Name);
            if (p != null)
            {
                LoginPid = p.Id;
                LoginDisplayName = p.FirstName.Substring(0, Math.Min(p.FirstName.Length, 5)) + p.LastName.Substring(0, Math.Min(p.LastName.Length, 1));
            }
        }
        var loginPid = @LoginPid;

            function itemStateChange(invItemId, fromStock) {
                let stockBtn = document.querySelector("#" + "iid" + invItemId);
                if (fromStock) {
                    if (stockBtn.getAttribute("type") == "text") {
                        cur_StockInvItemId = invItemId;
                        return;
                    }
                    cur_StockInvItemId = -1;
                }
                let stateBtn = document.querySelector("#" + "sid" + invItemId);
                let state;
                let pid;
                if (fromStock) {
                    state = 0;
                    pid = -1;
                }
                else {
                    state = stateBtn.getAttribute("state");
                    pid = stateBtn.getAttribute("pid");
                    switch (state) {
                        case "0":
                            state = 1;
                            break;
                        case "1":
                            state = 2;
                            pid = loginPid;
                            break;
                        case "2":
                            if (pid == loginPid) {
                                state = 1;
                                pid = -1;
                            }
                            break;
                        default:
                            state = 1;
                            break;
                    }
                }
                var parameters = "{'invItemId':'" + invItemId + "','pid':'" + pid + "','state':'" + state + "'}";
                $.ajax({
                    url: "/Inventory?handler=ItemStateChange",
                    contentType: "application/json",
                    dataType: "json",
                    data: parameters,
                    success: function (response) {
                        if (response.indexOf("ERROR~:") === -1) {
                            var invIS = $.parseJSON(response);
                            stateBtn.setAttribute("state", invIS.state);
                            stateBtn.setAttribute("pid", invIS.pid);
                            stateBtn.className = invIS.btnClass;
                            stateBtn.innerHTML = invIS.displayName;
                            if (fromStock) {
                                stockBtn.setAttribute("type", "text");
                                stockBtn.className = "";
                                if (stockBtn.value == "In?") {
                                    stockBtn.value = "";
                                }
                                // ensure value is selected after becoming text again
                                stockBtn.blur();
                                stockBtn.focus();
                                stockBtn.select();
                                stockBtn.onchange = function () { updateStock(invItemId); }
                                stockBtn.onclick = function () { this.select(); itemStateChange(invItemId, true); }
                                stockBtn.onFocus = function () { onFocus(invItemId); }
                                cur_StockInvItemId = invItemId;
                            } else {
                                if (invIS.state == 2) {
                                    stockBtn.setAttribute("type", "button");
                                    stockBtn.className = "StockBtn";
                                    if (stockBtn.value == "") {
                                        stockBtn.value = "In?";
                                    }
                                    stockBtn.onclick = function () { this.select(); itemStateChange(invItemId, true); };
                                    stockBtn.onFocus = function () { };
                                }
                            }
                        }
                    },
                    fail: function (response) {
                    }
                });
            }

            function updateStock(invItemId) {
                if (invItemId === -1) {
                    return;
                }
                let stockBtn = document.querySelector("#" + "iid" + invItemId);

                var stock; 
                if (stockBtn.value.length == 0) {
                    stock = 0;
                }
                else {
                    stock = parseInt(stockBtn.value);
                    if (Number.isNaN(stock) || (stock == 0)) {
                        stockBtn.value = "";
                        stock = 0;
                    }
                }
             
                var parameters = "{'invItemId':'" + invItemId + "','stock':'" + stock + "'}";
                $.ajax({
                    url: "/Inventory?handler=ItemStockChange",
                    contentType: "application/json",
                    dataType: "json",
                    data: parameters,
                    success: function (response) {
                        if (response.indexOf("ERROR~:") !== -1) {
                            alert("Stock not updated.")
                        }
                        else {
                            if (cur_StockInvItemId == invItemId) {
                                cur_StockInvItemId = -1;
                            }
                        }
                    },
                    fail: function (response) {
                    }
                });

            }

            function encodeQuotes(str) {
                return str.replace(/\"/g, "^^").replace(/\'/g, "^");
            }
            function decodeQuotes(str) {
                return str.replace(/^^/g, "\"").replace(/^/g, "'");
            }

            function invBeforeUnload() {
                updateStock(cur_StockInvItemId);
            }

        </script>

    </head>

    <body onbeforeunload="invBeforeUnload()">
        <p>
            <a href="Inventory\Edit?id=67"> <b>+</b> Add New Item</a>
        </p>
        <table class="table">
            <thead>
                <tr>
                    <th>Cur</th>
                    <th>Units</th>
                    <th>Item</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.InventoryItems)
                {
                    <tr>
                        <td>
                            @{
                                string fid = "fid" + item.ItemId;
                                string iid = "iid" + item.ItemId;
                                string sid = "sid" + item.ItemId;
                                string inputType;
                                string onClickFunc;
                                string onChangeFunc;
                                string onFocusFunc;
                                string inputClass;
                                string curStock = (item.CurrentStock.HasValue && (item.CurrentStock.Value > 0)) ? item.CurrentStock.Value.ToString() : "";
                                if (item.State == 2)
                                {
                                    inputType = "button";
                                    inputClass = "StockBtn";
                                    if (curStock.Length == 0)
                                        curStock = "In?";
                                    onClickFunc = "{this.select(); itemStateChange(" + item.ItemId + ", true);}";
                                    onChangeFunc = "";
                                    onFocusFunc = "";
                                }
                                else
                                {
                                    inputType = "text";
                                    onClickFunc = "";
                                    inputClass = "";
                                    onClickFunc = "{this.select(); itemStateChange(" + item.ItemId + ", true);}";
                                    onChangeFunc = "updateStock(" + item.ItemId + ")";
                                    onFocusFunc = "onFocus(" + item.ItemId + ")";
                                }
                            }
                            <form id="@fid"><input style="width:2em" invItemId="@item.ItemId" type="@inputType" id="@iid" class="@inputClass" onclick="@onClickFunc" onchange="@onChangeFunc" onfocus="@onFocusFunc" value="@curStock"></form>
                        </td>
                        <td>
                            @{
                                CreateItemsModel.ItemUnits units = (CreateItemsModel.ItemUnits)item.Units;
                                var unitsStr = units.ToString();
                            }
                            @unitsStr
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Item.Name)
                        </td>
                        <td>
                            @{
                                IndexInvModel.InvItemState invIS = Model.GetInvItemState(item);
                            }
                            <button class="@invIS.btnClass" id="@sid" onClick="itemStateChange('@item.ItemId', false)" pid="@invIS.pid" state="@invIS.state" invItemId="@item.ItemId">@invIS.displayName</button>
                            @*<a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                            <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>*@
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </body>
