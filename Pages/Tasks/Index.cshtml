@page
@model CStat.Pages.Tasks.IndexModel
@using CTask = CStat.Models.Task;
@{
    ViewData["Title"] = "Tasks";
}

<head>

    <style>

        tr:nth-child(even) {
            background-color: #fff185
        }

        .table td {
            padding: 0.5rem;
        }

        td > a {
            text-decoration: none;
            color: black;
        }

    </style>

    <script type="text/javascript">

        window.addEventListener("pageshow", function (event) {
            let historyTraversal = event.persisted || (typeof window.performance != "undefined" && window.performance.navigation.type === 2);
            if (historyTraversal) {
                // Make sure to refresh top status page when returning to this page
                window.location.reload(true);
            }
        });

    </script>

</head>

<body>
    <h4>
        <b><a asp-page="Create">+ Create New</a></b>
    </h4>
    <table class="table">
        <thead>
            <tr style="background-color: lightgray;">
                <th>
                    ID
                </th>
                <th>
                    Desc
                </th>
                <th>
                    Stat
                </th>
                <th>
                    Priority
                </th>
                <th>
                    Person
                </th>
                <th>
                    Due
                </th>
                <th style="text-align:center">X</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Task) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    <a asp-page="./Create" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Description)</a>
                </td>
                <td>
                    @{
                    item.GetTaskStatus (out CTask.eTaskStatus state, out CTask.eTaskStatus reason, out int pctComp);
                    var stateStr = ((CTask.eTaskStatus)state).ToString().Replace("_", " ") + " (" + pctComp + "%)";
                    }
                    @stateStr
                </td>
                <td>
                    @{
                    var priorityStr = ((CTask.ePriority)item.Priority).ToString().Replace("_", " ");
                    }
                    @priorityStr
                </td>
                <td>
                    @{
                    var nameStr = (item.Person != null) ? item.Person.FirstName + " " + item.Person.LastName : "none";
                    }
                    @nameStr
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DueDate)
                </td>
                <td>
                    <a asp-page="./Delete" asp-route-id="@item.Id">[Delete]</a>
                </td>
            </tr>
        }
        </tbody>
    </table>
</body>