@page
@model CStat.Pages.Tasks.IndexModel
@using CTask = CStat.Models.Task;
@{
    ViewData["Title"] = Model.IsTemplate ? "Task Templates" : "Tasks";
}

<head>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.3/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.3/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/gh/bgaze/bootstrap4-dialogs@1/dist/bootstrap4-dialogs.min.js"></script>

    <style>

        .table td {
            padding: 0.5rem;
        }

        td > a {
            text-decoration: none;
            color: black;
        }

        .split-para {
            display: block;
            margin: 10px;
        }

        .split-para span {
           display: block;
           float: right;
           width: 50%;
           margin-left: 5px;
           text-align: right;
        }

        .DueStyle {
            background-color: #ffE0E0;
            font-weight:bold;
        }

        .NotDueStyle {
            background-color: #ffffff;
        }

        .DueStyleOdd {
            background-color: #ffC8C8;
            font-weight: bold;
        }

        .NotDueStyleOdd {
            background-color: #fff185
        }

    </style>

    <script type="text/javascript">

        window.addEventListener("pageshow", function (event) {
            let historyTraversal = event.persisted || (typeof window.performance != "undefined" && window.performance.navigation.type === 2);
            if (historyTraversal) {
                // Make sure to refresh top status page when returning to this page
                window.location.reload(true);
            }
        });

        function autoGenAll() {

            var autoGenFormData = new FormData();
            jQuery.ajax({
                url: "/Tasks/Index?handler=AutoGen",
                headers: {
                    RequestVerificationToken:
                        $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                type: "POST",
                data: autoGenFormData,
                async: true,
                processData: false,
                contentType: false,
                success: function (res) {
                    if (res.indexOf("Success") === 0) {
                        alert("Template Tasks Successfully Regenerated");
                    }
                    else {
                        alert("AutoGen Failed : " + res);
                    }
                },
                error: function (res) {
                    alert("AutoGen Failed : " + res);
                },
                complete: function (res) {

                }
            });

        }

    </script>

</head>

@{
    var bkColor = Model.IsTemplate ? "#C0FFFF" : "#FFFFFF";
    var createLabel = Model.IsTemplate ? "New Template" : "Create New";
}

<body style="background-color:@bkColor">
    <p class="split-para">
        @{ if (Model.IsTemplate)
            {
                <b><a asp-page="Create" asp-route-id="-1">@createLabel</a></b>
                <b><a href="javascript:void(0);" style="margin-left:10px" id="autogen" onclick="autoGenAll()">Re-Gen Tasks</a></b>
            }
            else
            {
    <b><a asp-page="Create">@createLabel</a></b>
            }
        }
        <span>
            @{ if (Model.IsTemplate)
                {
                    <a asp-page="Index"><b>Back to Tasks</b></a>
                }
                else
                {
                    <a asp-page="Index" asp-route-showTemplates="true">Templates</a>
                }
            }
        </span>
    </p>

    <table class="table" style="background-color:@bkColor">
        <thead>
            <tr style="background-color: lightgray;">
                <th>
                    ID
                </th>
                <th>
                    Desc
                </th>
                <th>
                    Stat
                </th>
                <th>
                    Priority
                </th>
                <th>
                    Person
                </th>
                <th>
                    Due
                </th>
                <th style="text-align:center">X</th>
            </tr>
        </thead>
        <tbody>
            @{
                int i = 0;
            }
            @foreach (var item in Model.Task)
            {
                <tr class="@item.ClassName(i++)">
                    <td>
                        <a asp-page="./Create" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Id)</a>
                    </td>
                    <td>
                        <a asp-page="./Create" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Description)</a>
                    </td>
                    <td>
                        @{
                            item.GetTaskStatus(out CTask.eTaskStatus state, out CTask.eTaskStatus reason, out int pctComp);
                            var stateStr = ((CTask.eTaskStatus)state).ToString().Replace("_", " ") + " (" + pctComp + "%)";
                        }
                        @stateStr
                    </td>
                    <td>
                        @{
                            var priorityStr = ((CTask.ePriority)item.Priority).ToString().Replace("_", " ");
                        }
                        @priorityStr
                    </td>
                    <td>
                        @{
                            var nameStr = (item.Person != null) ? item.Person.FirstName + " " + item.Person.LastName : "none";
                        }
                        @nameStr
                    </td>
                    <td>
                        @{
                            string dateStr = "---";
                            if (item.DueDate.HasValue)
                            {
                                 dateStr = item.DueDate.Value.Month + "/" + item.DueDate.Value.Day + "/" + item.DueDate.Value.Year%100;
                                 if ((item.DueDate.Value.Hour != 23) || (item.DueDate.Value.Minute != 59))
                                 {
                                    if ((item.DueDate.Value.Hour == 0) && (item.DueDate.Value.Minute == 0))
                                        dateStr += " START";
                                    else
                                    {
                                        string ampm; 
                                        int hr = item.DueDate.Value.Hour;
                                        if (item.DueDate.Value.Hour >= 12)
                                        {
                                            hr -= 12;
                                            ampm = " PM";
                                        }
                                        else
                                            ampm = " AM";
                                        dateStr = dateStr + " " + hr + ":" + item.DueDate.Value.Minute + ampm;
                                    }
                                }
                            }
                        }
                        @dateStr
                    </td>
                    <td>
                        <a asp-page="./Delete" asp-route-id="@item.Id">[Delete]</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</body>
