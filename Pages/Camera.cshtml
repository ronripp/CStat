@page
@model CStat.Pages.CameraModel
@using Common

@{
    ViewData["Title"] = "Camera";
    Layout = "_LayoutCam";
}

<head>

    <meta name="viewport" content="width=device-width, initial-scale=1.0; text/html; charset=utf-8">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.3/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.3/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/gh/bgaze/bootstrap4-dialogs@1/dist/bootstrap4-dialogs.min.js"></script>

    <style>

        .camSize {
            width: 100%;
            height: auto;
        }

        .tbl {
            color: orange;
            width: 100%;
            font-size: 1.3em;
        }

        .pic {
        }

        a:link {
            text-decoration: none;
        }

        a:visited {
            text-decoration: none;
        }

        a:hover {
            text-decoration: none;
            color: inherit;
            background-color: blue;
        }

        a:active {
            text-decoration: none;
        }

        a {
            text-decoration: none;
            color: inherit;
        }

        .orth {
            color: yellow;
            padding-left: 4px;
            padding-right: 4px;
            width: 2.5em;
            font-weight: bold;
        }

        .diag {
            color: orange;
            padding-left: 4px;
            padding-right: 4px;
            width: 2.5em;
            font-weight: bold;
        }

        .ctr {
            color: lawngreen;
            padding-left: 4px;
            padding-right: 4px;
            font-weight: bold;
            width: 2.5em;
            font-weight: bold;
        }

        .OpPM {
            width: 2.5em;
        }

        #vtid {
            width: 100%;
            color: darkorange;
        }

        #videoIns {
            width: 100%;
            color: darkorange;
            text-align: center;
            font-weight: bold;
            text-decoration: underline;
        }

        #videoDiv {
            width: 100%;
            color : yellow;
        }

        .OpExit {
            width: 1.5em;
            font-weight: bold;
            color: white;
            text-align: right;
            padding-right: 6px;
        }

        .cview {
            color: cyan;
            margin-left: 4px;
            padding-left: 6px;
            padding-right: 6px;
        }

        .topnav {
            color: lawngreen;
            padding-left: 6px;
            padding-right: 6px;
            font-size: 1.3em;
            width: 100%;
        }
    </style>

    <script type="text/javascript">

        var gTimer;
        var gCleanTimer;
        var isOKToExit = false;

        function setCBHeight() {

            const elem = document.documentElement;
            let hdrDiv = document.querySelector(".header");
            let refBtn = document.querySelector(".refBtn");
            let setBtn = document.querySelector(".setBtn");
            let btnSVG = document.querySelector("#btnSVG");

            let totW = Math.min(document.documentElement.clientWidth, window.innerWidth || 0);
            let totH = Math.min(document.documentElement.clientHeight, window.innerHeight || 0);

        }

        screen.orientation.addEventListener("change", function (e) { setCBHeight(); }, false);
        //screen.window.orientation.addEventListener("change", function (e) { setCBHeight(); }, false)
        //$(window).bind("resize", function(){
        //    screenOrientation = ($(window).width() > $(window).height())? 90 : 0;
        //});
        //$(window).bind("resize", setCBHeight());

        function onExit() {
            isOKToExit = true;
            camCleanup();

            if (gTimer !== null) {
                clearTimeout(gTimer);
            }
            if (gCleanTimer !== null) {
                clearTimeout(gCleanTimer);
            }

            location.assign("/Equip");
        }

        function camCleanup() {
            if (gCleanTimer !== null) {
                clearTimeout(gCleanTimer);
                gCleanTimer = null;
            }
            var parameters = "{'except':'" + ($("#CamImg").attr("src") ?? "") + "'}";
            $.ajax({
                url: "/Camera?handler=CamCleanup",
                contentType: "application/json",
                async: false, // Synchronous because it is called within onunload
                dataType: "json",
                data: parameters,
                success: function (response) {
                },
                fail: function (response) {
                }
            });
        }

        function getVideo(url, title) {
            $("#videoDiv").text("Preparing " + title + " . . . Please wait a minute.");
            var parameters = "{'url':'" + url + "'}";
            $.ajax({
                url: "/Camera?handler=Video",
                contentType: "application/json",
                async: true,
                dataType: "json",
                data: parameters,
                timeout: 90000,
                success: function (response) {
                    if (response.indexOf("OK~:") === 0) {
                        let vFile = response.substr(4);
                    //    $("#videoDiv").html("<video controls id=\"videoId\">\n<source src=\"" + vfile + "\" type=\"video/mp4\">\nYour browser does not support the video tag.\n</video>");
                        $("#videoDiv").text("");
                        $("#videoDiv").html("<a href=\"" + vFile + "\" download>Download " + title + "</a>");
                    }
                },
                fail: function (response) {
                    $("#videoDiv").text("Failed to get " + title + " " + response);
                }
            });
        }

        function setSnapShot() {
            var parameters = "{'op':'" + 0 + "'}";
            $.ajax({
                url: "/Camera?handler=SnapShot",
                contentType: "application/json",
                async: true,
                dataType: "json",
                data: parameters,
                success: function (response) {
                    if (response.indexOf("OK~:") === 0) {
                        $("#CamImg").attr("src", response.substr(4));
                    }
                },
                fail: function (response) {

                },
                complete: function (response) {
                    if (gCleanTimer !== null) {
                        clearTimeout(gCleanTimer);
                    }
                    gTimer = setTimeout(camCleanup, 30000); // Clean camera and restore to full view after 30 secs for stability and security reasons
                }
            });
        }

        function onCamOp(op) {
            var parameters = "{'op':'" + op + "'}";
            $.ajax({
                url: "/Camera?handler=CamOp",
                contentType: "application/json",
                async: true,
                dataType: "json",
                data: parameters,
                success: function (response) {
                    if (response.indexOf("OK~:") === 0) {
                        let delay = parseInt(response.substr(4));
                        if (gTimer !== null) {
                            clearTimeout(gTimer);
                        }
                        gTimer = setTimeout(setSnapShot, delay);
                    }
                },
                fail: function (response) {
                }
            });
        }

        window.addEventListener('beforeunload', function (e) {
            if (!isOKToExit) {
                // Cancel the event
                e.preventDefault(); // If you prevent default behavior in Mozilla Firefox prompt will always be shown
                // Chrome requires returnValue to be set
                e.returnValue = '';
            }
            else {
                // the absence of a returnValue property on the event will guarantee the browser unload happens
                delete e['returnValue'];
            }
        });


        $(document).ready(function () {

        });

    </script>
</head>
<body onload="setCBHeight()" onresize="setCBHeight()" bgcolor="black" margin="0">
    <div>
        <table class="topnav">
            <tr>
                <td class="OpPM"><a href="#" onclick="onCamOp(301)"><b>Z+</b></a></td>
                <td class="OpPM"><a href="#" onclick="onCamOp(300)">z-</a></td>
                <td class="OpPM"><a href="#" onclick="onCamOp(100)">&#128161;</a></td>
                <td class="OpPM"><a href="#" onclick="onCamOp(101)">&#128266;</a></td>
                <td class="OpPM"><a href="#" onclick="onCamOp(401)"><b>F+</b></a></td>
                <td class="OpPM"><a href="#" onclick="onCamOp(400)">f-</a></td>
                <td class="OpExit"><a href="#" onclick="onExit()">X</a></td>
            </tr>
        </table>
    </div>
    <div style=" border-top: 2px solid green; ">
        <table class="tbl">
            <tr>
                <td class="cview"><a href="#" onclick="onCamOp(1)">Wall Flag</a></td>
                <td class="cview"><a href="#" onclick="onCamOp(2)">Kangaroo</a></td>
                <td>&nbsp;</td>
                <td class="diag"><a href="#" onclick="onCamOp(200)">&#x21D6;</a></td>
                <td class="orth"><a href="#" onclick="onCamOp(201)">&#x21E7;</a></td>
                <td class="diag"><a href="#" onclick="onCamOp(202)">&#x21D7;</a></td>
            </tr>
            <tr>
                <td class="cview"><a href="#" onclick="onCamOp(3)">Exit Door</a></td>
                <td class="cview"><a href="#" onclick="onCamOp(4)">Full Watch</a></td>
                <td>&nbsp;</td>
                <td class="orth"><a href="#" onclick="onCamOp(203)">&#x21E6;</a></td>
                <td class="ctr"><a href="#" onclick="onCamOp(0)">&#10227;</a></td>
                <td class="orth"><a href="#" onclick="onCamOp(204)">&#x21E8;</a></td>
            </tr>
            <tr>
                <td class="cview">---</td>
                <td class="cview">---</td>
                <td>&nbsp;</td>
                <td class="diag"><a href="#" onclick="onCamOp(205)">&#x21D9;</a></td>
                <td class="orth"><a href="#" onclick="onCamOp(206)">&#x21E9;</a></td>
                <td class="diag"><a href="#" onclick="onCamOp(207)">&#x21D8;</a></td>
            </tr>
        </table>
    </div>
    <div class="pic">
        <img src="@Model.CameraLink" id="CamImg" class="camSize" alt="Hit Refresh. Note : Always Hit X to Exit" />
        <div id="videoDiv"></div>
        <div id="videoIns">Click to download a video below :</div>
        <div>@Html.Raw(@Model._VideoLinks)</div>
    </div>
</body>

