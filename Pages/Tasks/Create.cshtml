@page
@model CStat.Pages.Tasks.CreateModel
@Html.AntiForgeryToken()

@{
    ViewData["Title"] = "Task " + ((Model.task.Id <= 0) ? "(New)" : Model.task.Id.ToString());
}

<head>
    @using System.Web;
    @using System.Globalization;

    <style>
        #taskDetail {
            overflow-y: scroll;
            height: 400px;
            font-family: "Verdana";
            min-width: 90%;
            resize: none; /* Remove this if you want the user to resize the textarea */
        }

        .table th {
            padding: 0.1rem;
            color: lightgray;
        }

        .table td {
            padding: 0.5rem;
        }

        .ljust {
            text-align: left;
        }

        .cjust {
            text-align: center;
        }

        .rjust {
            text-align: right;
        }

        .mhider {
            display: none;
            text-align: right;
        }

        .mhidec {
            display: none;
            text-align: center;
        }

        .mhidel {
            display: none;
            text-align: right;
        }

        .redit {
            text-align: right;
            max-width: 4em;
        }

        .cedit {
            text-align: left;
            max-width: 4em;
        }

        .ledit {
            text-align: left;
            width: 100%;
        }

        .hdrBk {
            background-color: #FFF090;
        }

        .tborder {
            padding: 4px 4px 4px 4px;
            border: 2px solid #ffd800;
            background-color: #fef4b9
        }

        .tcborder {
            padding: 4px 4px 4px 4px;
            border: 2px solid #008000;
            background-color: #D0FFD0;
            margin-top: 10px;
        }

        #SaveAll {
            background-color: #007272;
            border: 2px solid #0000FF;
            color: white;
            margin-bottom: 6px;
        }

        #markDone {
            background-color: #C0FFC0;
            color: black;
            font-weight: bold;
            margin-left: 8px;
        }
    </style>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

    <script type="text/javascript">

        var pics = [@Html.Raw(String.Join(",", Model.taskData.pics.Select(p => "'" + p.url + "'")))];
        var picTitles = [@Html.Raw(String.Join(",", Model.taskData.pics.Select(p => "'" + p.title + "'")))];

        var curPic = 0;
        var lastPic = -1;
        var inMarkDone = false;
        var dirtyTask = false;

        function saveTask() {

            var saveFormData = new FormData();
            // Add Task fields
            saveFormData.append("pctComp", $("#pctComp").val());
            saveFormData.append("taskState", $("#taskData_state").val());
            saveFormData.append("taskReason", $("#taskData_reason").val());
            saveFormData.append("taskPriority", $("#task_Priority").val());
            saveFormData.append("taskPersonId", $("#task_PersonId").val());
            saveFormData.append("taskDueDate", $("#task_DueDate").val());
            saveFormData.append("taskCommittedCost", !!$("#Funded").val() ? $("#Funded").val() : "");
            saveFormData.append("taskTotalCost", !!$("#TCostStat").html() ? $("#TCostStat").html() : "");
            saveFormData.append("taskTitle", encodeQuotes($("#task_Description").val()));
            saveFormData.append("taskId", $("#task_Id").val());
            saveFormData.append("taskType", $("#task_Type").val());
            saveFormData.append("taskDetail", encodeQuotes($("#taskDetail").val())); // Add Description
            saveFormData.append("fixedDueDate", $("#FixedDueDate").is(":checked"));
            saveFormData.append("taskComments", encodeQuotes($("#AllComments").val()));

            if (($("#task_ActualDoneDate").val() === "") && (inMarkDone || ($("#taskData_state").val() === 0x00001000))) {
                $("#task_ActualDoneDate").val(Date.now().toString());
            }
            saveFormData.append("taskDoneDate", $("#task_ActualDoneDate").val());

            // Get Photos and titles
            let pics_s = JSON.stringify(pics);
            let picTitles_s = JSON.stringify(picTitles.map(t => encodeQuotes(t)));

            // Get BOM
            let bom_a = saveBOM();
            let bom_s = JSON.stringify(bom_a);

            saveFormData.append("pics", pics_s);
            saveFormData.append("picTitles", picTitles_s);
            saveFormData.append("bom", bom_s);

            jQuery.ajax({
                url: "/Tasks/Create?handler=Save",
                headers: {
                    RequestVerificationToken:
                        $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                type: "POST",
                data: saveFormData,
                async: true,
                processData: false,
                contentType: false,
                success: function (res) {
                    if (res.indexOf("Success") === 0) {
                        dirtyTask = false;
                        $("#SaveAll").text("Success!");
                        $("#SaveAll").css("background-color", "#00C000");
                        setTimeout(function () {
                            $("#SaveAll").text("Save Task");
                            $("#SaveAll").css("background-color", "#007272");
                        }, 1000);
                        if (inMarkDone) {
                            $("#markDone").prop("disabled", true).css('opacity', 0.5);
                        }
                    }
                    else {
                        alert("Image Save Failed : " + res);
                    }
                },
                error: function (res) {
                    alert("Image Save Failed : " + res);
                },
                complete: function (res) {
                    $("#newPicId").hide();
                    $("#picHdrId").show();
                    inMarkDone = false;
                }
            });
        }

        function saveBOM() {
            var bom = [];

            $('#bomTable > tbody  > tr').each(function () {

                var id = -1;
                var desc = "";
                var ucost = "";
                var units = "";
                var qty = "";
                var tcost = "";

                $(this).find('td').each(function () {

                    let idStr = $(this).attr("id");

                    if (idStr.indexOf("mdd") === 0) {
                        desc = encodeQuotes($(this).html().trim());
                        if (desc.indexOf("&lt;add new") === -1) {
                            id = parseInt(idStr.substr(3), 10);
                        }
                    }

                    if (idStr.indexOf("mdu") === 0) {
                        ucost = $(this).html().trim();
                    }

                    if (idStr.indexOf("mds") === 0) {
                        units = $(this).html().trim();
                    }

                    if (idStr.indexOf("mdq") === 0) {
                        qty = $(this).html().trim();
                    }

                    if (idStr.indexOf("mdt") === 0) {
                        tcost = $(this).html().trim();
                    }
                });

                if (id !== -1) {
                    var line = new Object(); //matches C# BOMLine
                    line["id"] = id;
                    line["desc"] = desc;
                    line["ucost"] = ucost;
                    line["units"] = units;
                    line["qty"] = qty;
                    line["tcost"] = tcost;
                    bom.push(line);
                }
            });

            return bom;
        }

        function updateBOM() {
            var grandTot = 0;
            var foundAdd = false;
            var maxLine = 0;
            $('#bomTable > tbody  > tr').each(function () {
                $(this).find('td').each(function () {
                    let idStr = $(this).attr("id");

                    if (idStr.indexOf("mdt") === 0) {
                        let totStr = $(this).html().trim();
                        if (totStr.length > 0) {
                            if (totStr.indexOf("$") === 0) {
                                grandTot += parseFloat(totStr.substr(1));
                            } else {
                                grandTot += parseFloat(totStr);
                            }
                        }
                    } else {
                        if (idStr.indexOf("mdd") === 0) {
                            let line = parseInt(idStr.substr(3), 10);
                            if (line > maxLine) {
                                maxLine = line;
                            }
                            let descStr = $(this).html().trim();
                            if (descStr.indexOf("&lt;add new") != -1) {
                                foundAdd = true;
                            }
                        }
                    }
                });
            });

            if (!foundAdd) {
                var newLine = maxLine + 1;
                $('#bomTable > tbody:last').append('<tr><td id="mdd' + newLine + '">&#60;add new description&#62;</td>' +
                    '<td id="med' + newLine + '" class="mhidel"><input id="mid' + newLine + '" type="text" class="ledit"></td>' +
                    '<td id="mdu' + newLine + '" class="rjust"></td>' +
                    '<td id="meu' + newLine + '" class="mhider"><input id="miu' + newLine + '" type="text" class="redit"></td>' +
                    '<td id="mds' + newLine + '" class="cjust"></td>' +
                    '<td id="mes' + newLine + '" class="mhidec"><input id="mis' + newLine + '" type="text" class="cedit"></td>' +
                    '<td id="mdq' + newLine + '" class="rjust"></td>' +
                    '<td id="meq' + newLine + '" class="mhider"><input id="miq' + newLine + '" type="text" class="redit" style="max-width:2em;"></td>' +
                    '<td id="mdt' + newLine + '" class="rjust"></td>' +
                    '<td id="met' + newLine + '" class="mhider"><input id="mit' + newLine + '" type="text" class="redit"></td>' + '</tr>');
            }

            $("#gtId").html("Grand Total: $" + grandTot.toFixed(2));
            $("#TCostStat").html(grandTot.toFixed(2));
        }

        $(document).ready(function () {

            function setPicture() {
                if (pics.length > 0) {
                    $("#imgDiv").html('<image src="' + pics[curPic] + '" style="width:100%">');
                    $("#imgTitle").html("<b>" + picTitles[curPic] + "</b>");
                    lastPic = curPic;
                } else {
                    $("#imgDiv").html('[No Pictures]');
                    $("#imgTitle").html("<b>Tap [+] to Add a Picture</b>");
                }
                $("#imgNextBtn").prop("disabled", curPic >= (pics.length - 1));
                $("#imgPriorBtn").prop("disabled", curPic <= 0);
            }

            setPicture();

            $("#imgTitle").on('blur', "#editImgTitle", function () {
                picTitles[curPic] = $("#editImgTitle").val().trim();
                $("#imgTitle").html("<b>" + picTitles[curPic] + "</b>");
            });

            $("#imgTitle").click(function () {
                if ($("#imgTitle").html().indexOf("<b>") === 0) {
                    $("#imgTitle").html("<input type='text' id='editImgTitle' value='" + picTitles[curPic] + "'>");
                    $("#editImgTitle").focus();
                }
            });

            $("#imgNextBtn").click(function () {
                if (curPic < (pics.length - 1)) {
                    ++curPic;
                    setPicture();
                }
            });

            $("#imgPriorBtn").click(function () {
                if (curPic > 0) {
                    --curPic;
                    setPicture();
                }
            });

            $("#markDone").click(function () {
                inMarkDone = true;
                $("#taskData_state").val(0x00001000);
                $("#taskData_reason").val(0x02000000);
                $("#pctComp").val(100);
                $("#pctComp").trigger("change");
                saveTask();
            });

            $("#taskData_state").change(function () {
                let pctCompChanged = false;
                if ($("#taskData_state").val() == 0x00001000) {
                    $("#pctComp").val(100);
                    pctCompChanged = true;
                }
                else {
                    if ($("#pctComp").val() >= 100) {
                        $("#pctComp").val(90);
                        pctCompChanged = true;
                    }
                    $("#task_ActualDoneDate").val("");
                }
                if (pctCompChanged) {
                    $("#pctComp").trigger("change");
                }
            });

            $('body').on('keydown', "[id^=me]", function (e) {
                dirtyTask = true;
                if ((e.which == 9) || (e.which == 13)) {
                    e.preventDefault();
                    let eid = "#" + event.target.id;
                    let field = eid.substr(3, 1);
                    let line = eid.substr(4);
                    let did = "#md" + field + line;
                    let iid = "#mi" + field + line;
                    let fld;
                    let ln;
                    switch (field) {
                        case "d":
                            fld = "u";
                            ln = line;
                            break;
                        case "u":
                            fld = "s";
                            ln = line;
                            break;
                        case "s":
                            fld = "q";
                            ln = line;
                            break;
                        case "q":
                            fld = "t";
                            ln = line;
                            break;
                        case "t":
                            fld = "d";
                            ln = parseInt(line,10)+1;
                            break;
                    }
                    let ndid = "#md" + fld + ln;
                    $(ndid).hide();
                    let neid = "#me" + fld + ln;
                    let niid = "#mi" + fld + ln;
                    $(neid).show();
                    $(niid).attr("value", $(ndid).text());
                    $(niid).select();
                }
            });

            $(document).on('click', "[id^=md]", function () {
                dirtyTask = true;
                let did = "#" + event.target.id;
                let field = did.substr(3, 1);
                let line = did.substr(4);
                let eid = "#me" + field + line;
                let iid = "#mi" + field + line;

                $(did).hide();
                $(eid).show();
                $(iid).attr("value", $(did).text());
                $(iid).select();
            });

            $(document).on('blur', "[id^=mi]", function () {
                let iid = "#" + event.target.id;
                let field = iid.substr(3, 1);
                let line = iid.substr(4);
                let did = "#md" + field + line;
                let eid = "#me" + field + line;

                $(eid).hide();
                $(did).show();
                $(did).text($(iid).val());
                updateBOM();
            });

            var formdata = null;
            var fileInput = null;
            $("#newPicBtn").click(function () {
                $("#picHdrId").hide();
                $("#savePicBtn").hide();
                $("#newPicId").show();

                fileInput = document.getElementById("newImg");
                fileInput.value = "";
                $("#newImgDesc").val("");

                if (window.FormData) {
                    formdata = new FormData();
                }

                fileInput.addEventListener("change", function (evt) {
                    $("#savePicBtn").show();
                });
            });

            $("#cancelPicBtn").click(function () {
                $("#newPicId").hide();
                $("#picHdrId").show();
            });

            $("#pctComp").change(function () {
                let comp = $("#pctComp").val();
                let compVal = parseInt(comp);
                if (!!compVal) {
                    if (compVal < 100) {
                        $("#markDone").prop("disabled", false).css('opacity', 1.0);
                        if ($("#taskData_state").val() === 0x00001000) {
                            $("#taskData_state").val(0x00000400);
                        }
                        $("#taskData_reason").val(0x04000000);
                    } else {
                        $("#taskData_state").val(0x00001000);
                        $("#taskData_reason").val(0x02000000);
                        $("#markDone").prop("disabled", true).css('opacity', 0.5);
                    }
                } else {
                    return;
                }
                var pbarComp = $("#pbarComp");
                pbarComp.attr("aria-valuenow", comp);
                pbarComp.css("width", comp + "%");
                $("#srComp").text(comp + "% Complete");
            });

            $("#Funded").change(function () {
                updateFunded();
            });


            $("body").on('DOMSubtreeModified', "#TCostStat", function () {
                updateFunded();
            });

            function updateFunded() {
                let tcostStr = $("#TCostStat").html();
                let tcost = (!!tcostStr) ? parseFloat(tcostStr) : 0;

                let fundedStr = $("#Funded").val();
                let funded = !!fundedStr ? parseFloat(fundedStr) : 0;
                let pct = (tcost === 0) ? 100 : Math.round((funded / tcost) * 100);
                var pbarCost = $("#pbarCost");
                pbarCost.attr("aria-valuenow", pct);
                pbarCost.css("width", pct + "%");
                $("#srCost").text(pct + "% Funded");
            }

            function initCosts() {
                updateBOM();
            }

            initCosts();
            initialView();

            $("#savePicBtn").click(function () {
                var i = 0, len = fileInput.files.length, img, reader, file;

                for (; i < len; i++) {
                    file = fileInput.files[i];

                    if (!!file.type.match(/image.*/)) {
                        if (window.FileReader) {
                            reader = new FileReader();
                            reader.onloadend = function (e) {
                                //showUploadedItem(e.target.result, file.fileName);
                            };
                            reader.readAsDataURL(file);
                        }

                        if (formdata) {
                            let picDesc = $("#newImgDesc").val();
                            if (!picDesc) {
                                if (confirm("Empty picture description. Add?")) {
                                    return;
                                }
                                picDesc = "";
                            }
                            let tid = $("#newImgDesc").attr("tid");
                            if (!tid) {
                                tid = "-1"; // error condition
                            }
                            formdata.append("image", file);
                            formdata.append("picTitle", encodeQuotes(picDesc));
                            formdata.append("taskId", tid);
                            formdata.append("picId", pics.length + 1);

                            jQuery.ajax({
                                url: "/Tasks/Create?handler=SendPic",
                                headers: {
                                    RequestVerificationToken:
                                        $('input:hidden[name="__RequestVerificationToken"]').val()
                                },
                                type: "POST",
                                data: formdata,
                                async: true,
                                processData: false,
                                contentType: false,
                                success: function (res) {
                                    if (res.indexOf("Success:") === 0) {
                                        pics.push(res.substr(8));
                                        picTitles.push(picDesc);
                                        dirtyTask = true;
                                        setPicture();
                                    } else {
                                        alert("Image Save Failed : " + res);
                                    }
                                },
                                error: function (res) {
                                    alert("Image Save Failed : " + res);
                                },
                                complete: function (res) {
                                    $("#newPicId").hide();
                                    $("#picHdrId").show();
                                }
                            });
                        }
                    }
                    else {
                        alert('Not a valid image!');
                    }
                }
            });

            $("#delPicBtn").click(function () {
                if ((pics.length > 0) && confirm("Delete " + picTitles[curPic] + " ?")) {
                    pics.splice(curPic, 1);
                    picTitles.splice(curPic, 1);
                    if (curPic > (pics.length - 1)) {
                        curPic = Math.max(curPic - 1, 0);
                    }
                    dirtyTask = true;
                    setPicture();
                }
            });

            $("#FixedDueDate").click(function () {
                if ($("#FixedDueDate").is(":checked")) {
                    $("#DueDateLabel").text("Due Date:");
                } else {
                    $("#DueDateLabel").text("Est. Done:");
                }
             });

            $("#NewComment").focus(function () {
                if (this.value === "<add a comment here>") {
                    this.select();
                }
            });
             

            $("#AddComment").click(function () {
                let newCom = $("#NewComment").val();
                if (!!newCom) {
@{
                    var dtLoc = DateTime.Now;
                    TimeZoneInfo easternZone = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");
                    DateTime dt = TimeZoneInfo.ConvertTime(dtLoc, easternZone);
                    var AtIdx = User.Identity.Name.IndexOf("@");
                    if (AtIdx == -1) AtIdx = 6;
                    var user = User.Identity.Name.Substring(0, AtIdx);
                    var curDT = "===[ " + user + " " + dt.DayOfWeek.ToString().Substring(0, 3) + " " + dt.Month + "/" + dt.Day + "/" + dt.Year % 100 + " @ " + dt.ToString("h:mm") + " " + ((dt.Hour >= 12) ? "PM" : "AM") + " ]===";
}
                    let allComs = $("#AllComments").val();
                    allComs = "@curDT" + "\n" + newCom + "\n" + allComs;
                    $("#AllComments").val(allComs);
                    $("#NewComment").val("<add a comment here>");
                }
            });

            $("input").change(function () {
                dirtyTask = true;
            });
            $("select").change(function () {
                dirtyTask = true;
            });
            $("textarea").change(function () {
                dirtyTask = true;
            });

            function markTaskDirty(e) {
                dirtyTask = true;
            }

            function initialView() {
                if($("#task_Description").val().trim() === ""){
                    $("#task_Description").focus();
                }
            }

            // Enable navigation prompt if task dirty
            window.onbeforeunload = function () {

                let focusEl = document.activeElement;
                let textFocus = !!focusEl && (focusEl.type === "text") || (focusEl.type === "textarea");

                if (dirtyTask || textFocus) {
                    return "Task NOT Saved";
                } else {
                    return;
                }
            };
        });

        function encodeQuotes(str) {
            return str.replace(/\"/g, "^^").replace(/\'/g, "^");
        }

    </script>

</head>


@{
    var bkColor = Model.IsTemplate ? "#FFC0C0" : "#FFFFFF";
    var saveStr = Model.IsTemplate ? "Save Template" : "Save Task";
 }

<body style="background-color:@bkColor">

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="task.Id" />
    <input type="hidden" asp-for="task.Type" />
    <input type="hidden" asp-for="task.ActualDoneDate" />
    <div class="row" style="background-color:@bkColor">
        <div class="col-md-10">
            <div class="form-group">
                <label asp-for="task.Description" class="control-label">Title:</label>
                <input asp-for="task.Description" class="form-control" style="font-weight:bold" />
                <span asp-validation-for="task.Description" class="text-danger"></span>
            </div>
        </div>
        <div class="col-md-2">
            <button id="SaveAll" onclick="saveTask()">@saveStr</button>
        </div>
    </div>

    <div>
        <ul class="nav nav-tabs">
            <li class="active">
                <a href="#statusTab" data-toggle="tab"><b>Status</b></a>
            </li>
            <li role="presentation">
                <a href="#descTab" data-toggle="tab"><b>Detail</b></a>
            </li>
            <li role="presentation">
                <a href="#picTab" data-toggle="tab"><b>Pictures</b></a>
            </li>
            <li role="presentation">
                <a href="#bomTab" data-toggle="tab"><b>Costs</b></a>
            </li>
        </ul>

        <div class="tab-content">
            <div class="tab-pane active" id="statusTab">

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group tborder" style="margin-top: 10px">
                            <input type="text" id="pctComp" style="max-width:2.2em; text-align:center; font-weight:bold" value="@Model.taskData.PercentComplete" /><b> % Complete</b><button id="markDone">Mark Done</button>
                            <div class="progress" style="max-height:2.4em; max-width:16em; margin-top:4px; border: 2px solid black;">
                                <div id="pbarComp" class="progress-bar" role="progressbar" aria-valuenow="@Model.taskData.PercentComplete" aria-valuemin="0" aria-valuemax="100" style="width:@Model.taskData.PercentComplete%">
                                    <div id="srComp" class="sr-only">@Model.taskData.PercentComplete% Complete</div>
                                </div>
                            </div>
                            <div>
                                <label asp-for="taskData.state" class="control-label">State:</label>
                                <select asp-for="taskData.state" asp-items="ViewBag.State" style="max-width:10em; margin-right:8px"></select>
                                <label asp-for="taskData.reason" class="control-label">Reason:</label>
                                <select asp-for="taskData.reason" asp-items="ViewBag.Reason" style="max-width:10em; margin-right:8px"></select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="tborder" style="margin-top:10px">
                            <label asp-for="task.PersonId" class="control-label">Assigned to:</label>
                            <select asp-for="task.PersonId" asp-items="ViewBag.PersonId" style="max-width:10em; margin-right:8px; margin-bottom:6px"></select>
                            @{
                                var checkedStr = (Model.taskData.FixedDueDate) ? "checked" : "";
                                var dueDateLabel = (Model.taskData.FixedDueDate) ? "Due Date:" : "Est. Done:";
                            }
                            <div>
                                <label id="DueDateLabel" asp-for="task.DueDate" class="control-label" style="margin-right:1.3em">@dueDateLabel</label>
                                <input asp-for="task.DueDate" type="date" style="max-height:1.4em; max-width:9.7em;" />

                            </div>
                            <div>
                                <input type="checkbox" id="FixedDueDate" name="FixedDue" @checkedStr>
                                <label id="FixedDueLabel" for="FixedDue">Fixed Date?</label>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="tborder" style="margin-top:10px">
                            <label asp-for="task.Priority" class="control-label">Priority:</label>
                            <select asp-for="task.Priority" asp-items="ViewBag.Priority" style="max-height: 2.4em; max-width: 8.2em"></select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group tcborder">
                            <label asp-for="task.CommittedCost" class="control-label">Funded&nbsp;&nbsp;&nbsp;&nbsp;$</label>
                            <input type="text" id="Funded" style="max-width:5em; text-align:left; font-weight:bold;" value="@Model.task.CommittedCost.Value.ToString("F", CultureInfo.CurrentCulture)" />
                            <div class="progress" style="max-height:2.4em; max-width:16em; margin-top:4px; border: 2px solid black;">
                                <div id="pbarCost" class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width:60%; background-color:limegreen !important;">
                                    <div id="srCost" class="sr-only">60% Funded</div>
                                </div>
                            </div>
                            <span font-weight:bold">Total Cost $</span>
                            <span id="TCostStat" style="max-width:5em; text-align:left; font-weight:bold">@Model.task.TotalCost</span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <span>
                            <input type="text" style="width:90%" id="NewComment" value="<add a comment here>" />
                            <button id="AddComment"><b>+</b></button>
                        </span>
                        <textarea asp-for="taskData.comments" class="form-control" id="AllComments" disabled style="min-height:8em; color:black; background-color:white"></textarea>
                    </div>
                </div>
            </div>
            <div class="tab-pane" id="descTab">

                <section class="row">
                    <div class="col-md-12" width="100%" style="margin-top:8px">
                        <textarea asp-for="taskData.Detail" class="form-control" id="taskDetail"></textarea>
                    </div>
                </section>

            </div>
            <div class="tab-pane" id="picTab">
                <div id="picHdrId" class="col-md-12" width="100%">
                    <table width="100%" style="margin-top:4px">
                        <tr>
                            <td><button id="newPicBtn" style="margin-right:6px"><b>+</b></button></td>
                            <td><button id="imgPriorBtn">&#60;&#60;</button></td>
                            <td id="imgTitle" style="text-align:center; margin-left:4px; margin-right:4px;"></td>
                            <td><button id="imgNextBtn">&#62;&#62;</button></td>
                            <td><button id="delPicBtn" style="margin-left:6px"><b>X</b></button></td>
                        </tr>
                    </table>
                </div>

                <div id="newPicId" style="display:none; margin-top:4px; border: 3px ridge teal">
                    <div class="col-md-12">
                        <h4>Add New Picture with Title ...</h4>
                    </div>
                    <div class="col-md-3" style="margin-top:4px">
                        <input id="newImg" type="file" name="file">
                    </div>
                    <div class="col-md-6" style="margin-top:4px">
                        <span style="text-align:center; margin-left:4px; margin-right:4px;"><b><label for="newImgDesc"></label>Title: </b><input id="newImgDesc" tid="@Model.task.Id" style="min-width:20em" /></span>
                    </div>
                    <div class="col-md-3" style="margin-top:4px; margin-bottom:4px">
                        <button id="savePicBtn" style="margin-left:4px; display:none; background-color:greenyellow"><b>Save</b></button>
                        <button id="cancelPicBtn" style="margin-left:4px"><b>Cancel</b></button>
                    </div>
                </div>
                <div id="imgDiv">
                </div>
            </div>

            <div class="tab-pane" id="bomTab">

                <section class="row">
                    <div class="col-md-12" width="100%">
                        <table width="100%" style="margin-top:4px">
                            <tr>
                                <th><h4><b>Materials/Labor/Fees</b></h4></th>
                                <th>&nbsp;&nbsp;&nbsp;</th>
                                <th><button id="mopId" onclick="updateBOM()" style="margin-left:10px; max-height:2.2em">+</button></th>
                                <th>&nbsp;&nbsp;&nbsp;</th>
                                <th id="gtId" style="text-align:right;"></th>
                            </tr>
                        </table>
                    </div>
                    <div class="col-md-12" width="100%">
                        <table id="bomTable" width="100%" style="margin-top:4px">
                            <tr>
                                <th class="hdrBk">Item Description</th>
                                <th class="rjust hdrBk">UCost</th>
                                <th class="cjust hdrBk">Unit</th>
                                <th class="rjust hdrBk">Qty</th>
                                <th class="rjust hdrBk">TCost</th>
                            </tr>
                            <tbody>

                                @foreach (var bl in Model.taskData.bom)
                                {
                                    <tr>
                                        <td id="mdd@{@bl.id}">@bl.desc</td>
                                        <td id="med@{@bl.id}" class="mhidel"><input id="mid1" type="text" class="ledit"></td>
                                        <td id="mdu@{@bl.id}" class="rjust">@bl.ucost</td>
                                        <td id="meu@{@bl.id}" class="mhider"><input id="miu1" type="text" class="redit"></td>
                                        <td id="mds@{@bl.id}" class="cjust">@bl.units</td>
                                        <td id="mes@{@bl.id} " class="mhidec"><input id="mis1" type="text" class="cedit"></td>
                                        <td id="mdq@{@bl.id}" class="rjust">@bl.qty</td>
                                        <td id="meq@{@bl.id}" class="mhider"><input id="miq1" type="text" class="redit" style="max-width:2em;"></td>
                                        <td id="mdt@{@bl.id}" class="rjust">@bl.tcost</td>
                                        <td id="met@{@bl.id}" class="mhider"><input id="mit1" type="text" class="redit"></td>
                                    </tr>
                                }

                                @*<tr>
                                    <td id="mdd1">Gypsum Sheet Rock 4 x 8</td>
                                    <td id="med1" class="mhidel"><input id="mid1" type="text" class="ledit"></td>
                                    <td id="mdu1" class="rjust">$12.00</td>
                                    <td id="meu1" class="mhider"><input id="miu1" type="text" class="redit"></td>
                                    <td id="mds1" class="cjust">piece</td>
                                         <td id="mes1" class="mhidec"><input id="mis1" type="text" class="cedit"></td>
                                         <td id="mdq1" class="rjust">9</td>
                                         <td id="meq1" class="mhider"><input id="miq1" type="text" class="redit" style="max-width:2em;"></td>
                                         <td id="mdt1" class="rjust">$108.00</td>
                                         <td id="met1" class="mhider"><input id="mit1" type="text" class="redit"></td>
                                     </tr>
                                     <tr>
                                         <td id="mdd2">Gypsum Sheet Rock 4 x 8</td>
                                         <td id="med2" class="mhidel"><input id="mid2" type="text" class="ledit"></td>
                                         <td id="mdu2" class="rjust">$12.00</td>
                                         <td id="meu2" class="mhider"><input id="miu2" type="text" class="redit"></td>
                                         <td id="mds2" class="cjust">piece</td>
                                         <td id="mes2" class="mhidec"><input id="mis2" type="text" class="cedit"></td>
                                         <td id="mdq2" class="rjust">9</td>
                                         <td id="meq2" class="mhider"><input id="miq2" type="text" class="redit" style="max-width:2em;"></td>
                                         <td id="mdt2" class="rjust">$108.00</td>
                                         <td id="met2" class="mhider"><input id="mit2" type="text" class="redit"></td>
                                     </tr>
                                     <tr>
                                         <td id="mdd3">Gypsum Sheet Rock 4 x 8</td>
                                         <td id="med3" class="mhidel"><input id="mid3" type="text" class="ledit"></td>
                                         <td id="mdu3" class="rjust">$12.00</td>
                                         <td id="meu3" class="mhider"><input id="miu3" type="text" class="redit"></td>
                                         <td id="mds3" class="cjust">piece</td>
                                         <td id="mes3" class="mhidec"><input id="mis3" type="text" class="cedit"></td>
                                         <td id="mdq3" class="rjust">9</td>
                                         <td id="meq3" class="mhider"><input id="miq3" type="text" class="redit" style="max-width:2em;"></td>
                                         <td id="mdt3" class="rjust">$108.00</td>
                                         <td id="met3" class="mhider"><input id="mit3" type="text" class="redit"></td>
                                     </tr>*@
                            </tbody>
                        </table>
                    </div>
                </section>
            </div>
        </div>
    </div>

    @*<section class="row">
            <h3>Status</h3>
            <div class="col-md-6">
                <div class="form-group" style="margin-top:10px">
                    <div class="form-group">
                        <div class="progress" style="max-height:1.8em; max-width:12em">
                            <div class="progress-bar" role="progressbar" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100" style="width:70%">
                                <span class="sr-only">70% Complete</span>
                            </div>
                        </div>
                        <select asp-for="taskData.state" class="form-control" asp-items="ViewBag.State" style="max-width:10em"></select>
                        <select asp-for="taskData.reason" class="form-control" asp-items="ViewBag.Reason" style="max-width:10em"></select>
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <label asp-for="task.Status" class="control-label">% Complete:</label>
                    <input asp-for="task.Status" class="form-control" style="max-height:1.2em; max-width:5em" />
                    <span asp-validation-for="task.Status" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label asp-for="task.Status" class="control-label">Needed $:</label>
                    <input asp-for="task.Status" class="form-control" />
                    <span asp-validation-for="task.Status" class="text-danger"></span>
                </div>
            </div>
        </section>
        <section class="row">
            <h3>Owner</h3>
            <div class="col-md-4">
                <div class="form-group">
                    <label asp-for="task.PersonId" class="control-label">Assigned to:</label>
                    <select asp-for="task.PersonId" class="form-control" asp-items="ViewBag.PersonId"></select>
                    <span asp-validation-for="task.PersonId" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label asp-for="task.Worker1Id" class="control-label">Workers</label>
                    <input asp-for="task.DueDate" class="form-control" />
                    <span asp-validation-for="task.DueDate" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label asp-for="task.DueDate" class="control-label">Est.Done: </label>
                    <input asp-for="task.DueDate" class="form-control" />
                    <span asp-validation-for="task.DueDate" class="text-danger"></span>
                </div>
            </div>
        </section>*@

    @*<div class="form-group">
            <label asp-for="Task.Blocking1Id" class="control-label"></label>
            <select asp-for="Task.Blocking1Id" class="form-control" asp-items="ViewBag.Blocking1Id"></select>
        </div>
        <div class="form-group">
            <label asp-for="Task.Blocking2Id" class="control-label"></label>
            <select asp-for="Task.Blocking2Id" class="form-control" asp-items="ViewBag.Blocking2Id"></select>
        </div>
        <div class="form-group">
            <label asp-for="Task.Type" class="control-label"></label>
            <input asp-for="Task.Type" class="form-control" />
            <span asp-validation-for="Task.Type" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Task.TaskStatus" class="control-label"></label>
            <input asp-for="Task.TaskStatus" class="form-control" />
            <span asp-validation-for="Task.TaskStatus" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Task.PersonId" class="control-label"></label>
            <select asp-for="Task.PersonId" class="form-control" asp-items="ViewBag.PersonId"></select>
        </div>
        <div class="form-group">
            <label asp-for="Task.PositionTitle1" class="control-label"></label>
            <input asp-for="Task.PositionTitle1" class="form-control" />
            <span asp-validation-for="Task.PositionTitle1" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Task.PositionTile2" class="control-label"></label>
            <input asp-for="Task.PositionTile2" class="form-control" />
            <span asp-validation-for="Task.PositionTile2" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Task.PositionTitle3" class="control-label"></label>
            <input asp-for="Task.PositionTitle3" class="form-control" />
            <span asp-validation-for="Task.PositionTitle3" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Task.DueDate" class="control-label"></label>
            <input asp-for="Task.DueDate" class="form-control" />
            <span asp-validation-for="Task.DueDate" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Task.CreationDate" class="control-label"></label>
            <input asp-for="Task.CreationDate" class="form-control" />
            <span asp-validation-for="Task.CreationDate" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Task.StartDate" class="control-label"></label>
            <input asp-for="Task.StartDate" class="form-control" />
            <span asp-validation-for="Task.StartDate" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Task.CompletionDate" class="control-label"></label>
            <input asp-for="Task.CompletionDate" class="form-control" />
            <span asp-validation-for="Task.CompletionDate" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Task.ChurchId" class="control-label"></label>
            <select asp-for="Task.ChurchId" class="form-control" asp-items="ViewBag.ChurchId"></select>
        </div>
        <div class="form-group">
            <label asp-for="Task.PlanLink" class="control-label"></label>
            <input asp-for="Task.PlanLink" class="form-control" />
            <span asp-validation-for="Task.PlanLink" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Task.RequiredSkills" class="control-label"></label>
            <input asp-for="Task.RequiredSkills" class="form-control" />
            <span asp-validation-for="Task.RequiredSkills" class="text-danger"></span>
        </div>
        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>*@
    <div>
        <a asp-page="Index"><p style="margin-top:1em;">Back to List</p></a>
    </div>
</body>
    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
